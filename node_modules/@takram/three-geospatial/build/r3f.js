import { jsx as m, jsxs as a } from "react/jsx-runtime";
import { useMemo as p, useEffect as f } from "react";
import { Group as h, Vector3 as E, Matrix4 as x } from "three";
import { E as n, G, a as d } from "./shared.js";
import { extend as l } from "@react-three/fiber";
const u = /* @__PURE__ */ new x(), S = /* @__PURE__ */ new G(), w = /* @__PURE__ */ new E();
class F extends h {
  set(t, o, e, s = n.WGS84) {
    const c = S.set(t, o, e).toECEF(w);
    s.getEastNorthUpFrame(c, u).decompose(this.position, this.quaternion, this.scale);
  }
}
const y = ({
  ref: r,
  longitude: t,
  latitude: o,
  height: e = 0,
  ellipsoid: s = n.WGS84,
  children: c
}) => {
  const i = p(() => new F(), []);
  return f(() => {
    i.set(t, o, e, s);
  }, [t, o, e, s, i]), /* @__PURE__ */ m("primitive", { ref: r, object: i, children: c });
}, W = ({
  ref: r,
  args: t,
  children: o,
  ...e
}) => (l({ EllipsoidGeometry: d }), /* @__PURE__ */ a("mesh", { ref: r, ...e, children: [
  /* @__PURE__ */ m("ellipsoidGeometry", { args: t }),
  o
] }));
export {
  y as EastNorthUpFrame,
  W as EllipsoidMesh
};
//# sourceMappingURL=r3f.js.map
