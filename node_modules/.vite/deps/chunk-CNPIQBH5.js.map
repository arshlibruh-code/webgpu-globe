{
  "version": 3,
  "sources": ["../../@takram/three-geospatial/node_modules/.pnpm/tiny-invariant@1.3.3/node_modules/tiny-invariant/dist/esm/tiny-invariant.js", "../../@takram/three-geospatial/src/helpers/projectOnEllipsoidSurface.ts", "../../@takram/three-geospatial/src/Ellipsoid.ts", "../../@takram/three-geospatial/src/EllipsoidGeometry.ts", "../../@takram/three-geospatial/src/Geodetic.ts", "../../@takram/three-geospatial/src/ArrayBufferLoader.ts", "../../@takram/three-geospatial/src/assertions.ts", "../../@takram/three-geospatial/src/bufferGeometry.ts", "../../@takram/three-geospatial/src/capabilities.ts", "../../@takram/three-geospatial/src/constants.ts", "../../@takram/three-geospatial/node_modules/.pnpm/@petamoriken+float16@3.9.2/node_modules/@petamoriken/float16/src/_util/messages.mjs", "../../@takram/three-geospatial/node_modules/.pnpm/@petamoriken+float16@3.9.2/node_modules/@petamoriken/float16/src/_util/primordials.mjs", "../../@takram/three-geospatial/node_modules/.pnpm/@petamoriken+float16@3.9.2/node_modules/@petamoriken/float16/src/_util/arrayIterator.mjs", "../../@takram/three-geospatial/node_modules/.pnpm/@petamoriken+float16@3.9.2/node_modules/@petamoriken/float16/src/_util/is.mjs", "../../@takram/three-geospatial/node_modules/.pnpm/@petamoriken+float16@3.9.2/node_modules/@petamoriken/float16/src/_util/brand.mjs", "../../@takram/three-geospatial/node_modules/.pnpm/@petamoriken+float16@3.9.2/node_modules/@petamoriken/float16/src/_util/converter.mjs", "../../@takram/three-geospatial/node_modules/.pnpm/@petamoriken+float16@3.9.2/node_modules/@petamoriken/float16/src/_util/spec.mjs", "../../@takram/three-geospatial/node_modules/.pnpm/@petamoriken+float16@3.9.2/node_modules/@petamoriken/float16/src/Float16Array.mjs", "../../@takram/three-geospatial/node_modules/.pnpm/@petamoriken+float16@3.9.2/node_modules/@petamoriken/float16/src/DataView.mjs", "../../@takram/three-geospatial/src/typedArray.ts", "../../@takram/three-geospatial/src/TypedArrayLoader.ts", "../../@takram/three-geospatial/src/DataTextureLoader.ts", "../../@takram/three-geospatial/src/math.ts", "../../@takram/three-geospatial/src/decorators.ts", "../../@takram/three-geospatial/src/defineShorthand.ts", "../../@takram/three-geospatial/node_modules/.pnpm/three-stdlib@2.36.0_three@0.178.0/node_modules/three-stdlib/_polyfill/constants.js", "../../@takram/three-geospatial/node_modules/.pnpm/fflate@0.6.10/node_modules/fflate/esm/browser.js", "../../@takram/three-geospatial/node_modules/.pnpm/three-stdlib@2.36.0_three@0.178.0/node_modules/three-stdlib/loaders/EXRLoader.js", "../../@takram/three-geospatial/src/EXR3DTextureLoader.ts", "../../@takram/three-geospatial/src/EXRTextureLoader.ts", "../../@takram/three-geospatial/src/PointOfView.ts", "../../@takram/three-geospatial/src/Rectangle.ts", "../../@takram/three-geospatial/src/resolveIncludes.ts", "../../@takram/three-geospatial/src/typedArrayParsers.ts", "../../@takram/three-geospatial/src/STBNLoader.ts", "../../@takram/three-geospatial/src/TileCoordinate.ts", "../../@takram/three-geospatial/src/TilingScheme.ts", "../../@takram/three-geospatial/src/unrollLoops.ts"],
  "sourcesContent": [null, "import { Vector3 } from 'three'\n\nconst vectorScratch = /*#__PURE__*/ new Vector3()\n\n// See: https://en.wikipedia.org/wiki/Geographic_coordinate_conversion\n// Reference: https://github.com/CesiumGS/cesium/blob/1.122/packages/engine/Source/Core/scaleToGeodeticSurface.js\n\nexport interface ProjectOnEllipsoidSurfaceOptions {\n  centerTolerance?: number\n}\n\nexport function projectOnEllipsoidSurface(\n  position: Vector3,\n  reciprocalRadiiSquared: Vector3,\n  result = new Vector3(),\n  options?: ProjectOnEllipsoidSurfaceOptions\n): Vector3 | undefined {\n  const { x, y, z } = position\n  const rx = reciprocalRadiiSquared.x\n  const ry = reciprocalRadiiSquared.y\n  const rz = reciprocalRadiiSquared.z\n  const x2 = x * x * rx\n  const y2 = y * y * ry\n  const z2 = z * z * rz\n\n  // Compute the squared ellipsoid norm.\n  const normSquared = x2 + y2 + z2\n  const ratio = Math.sqrt(1 / normSquared)\n\n  // When very close to center or at center.\n  if (!Number.isFinite(ratio)) {\n    return undefined\n  }\n\n  // As an initial approximation, assume that the radial intersection is the\n  // projection point.\n  const intersection = vectorScratch.copy(position).multiplyScalar(ratio)\n  if (normSquared < (options?.centerTolerance ?? 0.1)) {\n    return result.copy(intersection)\n  }\n\n  // Use the gradient at the intersection point in place of the true unit\n  // normal. The difference in magnitude will be absorbed in the multiplier.\n  const gradient = intersection\n    .multiply(reciprocalRadiiSquared)\n    .multiplyScalar(2)\n\n  // Compute the initial guess at the normal vector multiplier.\n  let lambda = ((1 - ratio) * position.length()) / (gradient.length() / 2)\n\n  let correction = 0\n  let sx: number\n  let sy: number\n  let sz: number\n  let error: number\n  do {\n    lambda -= correction\n    sx = 1 / (1 + lambda * rx)\n    sy = 1 / (1 + lambda * ry)\n    sz = 1 / (1 + lambda * rz)\n    const sx2 = sx * sx\n    const sy2 = sy * sy\n    const sz2 = sz * sz\n    const sx3 = sx2 * sx\n    const sy3 = sy2 * sy\n    const sz3 = sz2 * sz\n    error = x2 * sx2 + y2 * sy2 + z2 * sz2 - 1\n    correction = error / ((x2 * sx3 * rx + y2 * sy3 * ry + z2 * sz3 * rz) * -2)\n  } while (Math.abs(error) > 1e-12)\n\n  return result.set(x * sx, y * sy, z * sz)\n}\n", "import { Matrix4, Vector3, type Ray } from 'three'\nimport invariant from 'tiny-invariant'\n\nimport {\n  projectOnEllipsoidSurface,\n  type ProjectOnEllipsoidSurfaceOptions\n} from './helpers/projectOnEllipsoidSurface'\n\nconst vectorScratch1 = /*#__PURE__*/ new Vector3()\nconst vectorScratch2 = /*#__PURE__*/ new Vector3()\nconst vectorScratch3 = /*#__PURE__*/ new Vector3()\n\nexport class Ellipsoid {\n  static readonly WGS84 = /*#__PURE__*/ new Ellipsoid(\n    6378137,\n    6378137,\n    6356752.3142451793\n  )\n\n  readonly radii: Vector3\n\n  constructor(x: number, y: number, z: number) {\n    this.radii = new Vector3(x, y, z)\n  }\n\n  get minimumRadius(): number {\n    return Math.min(this.radii.x, this.radii.y, this.radii.z)\n  }\n\n  get maximumRadius(): number {\n    return Math.max(this.radii.x, this.radii.y, this.radii.z)\n  }\n\n  reciprocalRadii(result = new Vector3()): Vector3 {\n    const { x, y, z } = this.radii\n    return result.set(1 / x, 1 / y, 1 / z)\n  }\n\n  reciprocalRadiiSquared(result = new Vector3()): Vector3 {\n    const { x, y, z } = this.radii\n    return result.set(1 / x ** 2, 1 / y ** 2, 1 / z ** 2)\n  }\n\n  projectOnSurface(\n    position: Vector3,\n    result = new Vector3(),\n    options?: ProjectOnEllipsoidSurfaceOptions\n  ): Vector3 | undefined {\n    return projectOnEllipsoidSurface(\n      position,\n      this.reciprocalRadiiSquared(),\n      result,\n      options\n    )\n  }\n\n  getSurfaceNormal(position: Vector3, result = new Vector3()): Vector3 {\n    return result\n      .multiplyVectors(this.reciprocalRadiiSquared(vectorScratch1), position)\n      .normalize()\n  }\n\n  getEastNorthUpVectors(\n    position: Vector3,\n    east = new Vector3(),\n    north = new Vector3(),\n    up = new Vector3()\n  ): void {\n    this.getSurfaceNormal(position, up)\n    east.set(-position.y, position.x, 0).normalize()\n    north.crossVectors(up, east).normalize()\n  }\n\n  getEastNorthUpFrame(position: Vector3, result = new Matrix4()): Matrix4 {\n    const east = vectorScratch1\n    const north = vectorScratch2\n    const up = vectorScratch3\n    this.getEastNorthUpVectors(position, east, north, up)\n    return result.makeBasis(east, north, up).setPosition(position)\n  }\n\n  getNorthUpEastFrame(position: Vector3, result = new Matrix4()): Matrix4 {\n    const east = vectorScratch1\n    const north = vectorScratch2\n    const up = vectorScratch3\n    this.getEastNorthUpVectors(position, east, north, up)\n    return result.makeBasis(north, up, east).setPosition(position)\n  }\n\n  getIntersection(ray: Ray, result = new Vector3()): Vector3 | undefined {\n    const reciprocalRadii = this.reciprocalRadii(vectorScratch1)\n    const p = vectorScratch2.copy(reciprocalRadii).multiply(ray.origin)\n    const d = vectorScratch3.copy(reciprocalRadii).multiply(ray.direction)\n    const p2 = p.lengthSq()\n    const d2 = d.lengthSq()\n    const pd = p.dot(d)\n    const discriminant = pd ** 2 - d2 * (p2 - 1)\n    if (p2 === 1) {\n      return result.copy(ray.origin)\n    }\n    if (p2 > 1) {\n      if (pd >= 0 || discriminant < 0) {\n        return // No intersection\n      }\n      const Q = Math.sqrt(discriminant)\n      const t1 = (-pd - Q) / d2\n      const t2 = (-pd + Q) / d2\n      return ray.at(Math.min(t1, t2), result)\n    }\n    if (p2 < 1) {\n      const discriminant = pd ** 2 - d2 * (p2 - 1)\n      const Q = Math.sqrt(discriminant)\n      const t = (-pd + Q) / d2\n      return ray.at(t, result) // Backface of the ellipsoid\n    }\n    if (pd < 0) {\n      return ray.at(-pd / d2, result) // Backface of the ellipsoid\n    }\n    // No intersection\n  }\n\n  getOsculatingSphereCenter(\n    surfacePosition: Vector3,\n    radius: number,\n    result = new Vector3()\n  ): Vector3 {\n    invariant(this.radii.x === this.radii.y)\n    const a2 = this.radii.x ** 2\n    const b2 = this.radii.z ** 2\n    const normal = vectorScratch1\n      .set(\n        surfacePosition.x / a2,\n        surfacePosition.y / a2,\n        surfacePosition.z / b2\n      )\n      .normalize()\n    return result.copy(normal.multiplyScalar(-radius).add(surfacePosition))\n  }\n\n  getNormalAtHorizon(\n    position: Vector3,\n    direction: Vector3,\n    result = new Vector3()\n  ): Vector3 {\n    invariant(this.radii.x === this.radii.y)\n    const a2 = this.radii.x ** 2\n    const b2 = this.radii.z ** 2\n    const p = position\n    const v = direction\n    let t = (p.x * v.x + p.y * v.y) / a2 + (p.z * v.z) / b2\n    t /= (p.x ** 2 + p.y ** 2) / a2 + p.z ** 2 / b2\n    const q = vectorScratch1.copy(v).multiplyScalar(-t).add(position)\n    return result.set(q.x / a2, q.y / a2, q.z / b2).normalize()\n  }\n}\n", "import { BufferAttribute, BufferGeometry, Vector3 } from 'three'\n\nexport interface EllipsoidGeometryParameters {\n  radii: Vector3\n  longitudeSegments?: number\n  latitudeSegments?: number\n}\n\nexport class EllipsoidGeometry extends BufferGeometry {\n  readonly type = 'EllipsoidGeometry'\n\n  parameters: EllipsoidGeometryParameters\n\n  constructor(\n    radii = new Vector3(1, 1, 1),\n    longitudeSegments = 32,\n    latitudeSegments = 16\n  ) {\n    super()\n    this.parameters = {\n      radii,\n      longitudeSegments,\n      latitudeSegments\n    }\n\n    longitudeSegments = Math.max(3, Math.floor(longitudeSegments))\n    latitudeSegments = Math.max(2, Math.floor(latitudeSegments))\n\n    const elementCount = (longitudeSegments + 1) * (latitudeSegments + 1)\n    const vertex = new Vector3()\n    const normal = new Vector3()\n    const vertices = new Float32Array(elementCount * 3)\n    const normals = new Float32Array(elementCount * 3)\n    const uvs = new Float32Array(elementCount * 2)\n    const grid: number[][] = []\n    const indices: number[] = []\n\n    // Vertices, normals and UVs\n    for (\n      let y = 0, vertexIndex = 0, uvIndex = 0, rowIndex = 0;\n      y <= latitudeSegments;\n      ++y\n    ) {\n      const rowIndices = []\n      const v = y / latitudeSegments\n      const phi = v * Math.PI\n\n      // Special case for the poles\n      let uOffset = 0\n      if (y === 0) {\n        uOffset = 0.5 / longitudeSegments\n      } else if (y === latitudeSegments) {\n        uOffset = -0.5 / longitudeSegments\n      }\n\n      for (\n        let x = 0;\n        x <= longitudeSegments;\n        ++x, vertexIndex += 3, uvIndex += 2, ++rowIndex\n      ) {\n        const u = x / longitudeSegments\n        const theta = u * Math.PI * 2\n        vertex.x = radii.x * Math.cos(theta) * Math.sin(phi)\n        vertex.y = radii.y * Math.sin(theta) * Math.sin(phi)\n        vertex.z = radii.z * Math.cos(phi)\n        vertices[vertexIndex] = vertex.x\n        vertices[vertexIndex + 1] = vertex.y\n        vertices[vertexIndex + 2] = vertex.z\n        normal.copy(vertex).normalize()\n        normals[vertexIndex] = normal.x\n        normals[vertexIndex + 1] = normal.y\n        normals[vertexIndex + 2] = normal.z\n        uvs[uvIndex] = u + uOffset\n        uvs[uvIndex + 1] = 1 - v\n        rowIndices.push(rowIndex)\n      }\n      grid.push(rowIndices)\n    }\n\n    // Indices\n    for (let y = 0; y < latitudeSegments; ++y) {\n      for (let x = 0; x < longitudeSegments; ++x) {\n        const a = grid[y][x + 1]\n        const b = grid[y][x]\n        const c = grid[y + 1][x]\n        const d = grid[y + 1][x + 1]\n        if (y !== 0) {\n          indices.push(a, b, d)\n        }\n        if (y !== latitudeSegments - 1) {\n          indices.push(b, c, d)\n        }\n      }\n    }\n\n    this.setIndex(indices)\n    this.setAttribute('position', new BufferAttribute(vertices, 3))\n    this.setAttribute('normal', new BufferAttribute(normals, 3))\n    this.setAttribute('uv', new BufferAttribute(uvs, 2))\n  }\n\n  copy(source: EllipsoidGeometry): this {\n    super.copy(source)\n    this.parameters = { ...source.parameters }\n    return this\n  }\n}\n", "import { Vector3 } from 'three'\n\nimport { Ellipsoid } from './Ellipsoid'\nimport {\n  projectOnEllipsoidSurface,\n  type ProjectOnEllipsoidSurfaceOptions\n} from './helpers/projectOnEllipsoidSurface'\n\nexport type GeodeticTuple = [number, number, number]\n\nexport interface GeodeticLike {\n  readonly longitude: number\n  readonly latitude: number\n  readonly height: number\n}\n\nconst vectorScratch1 = /*#__PURE__*/ new Vector3()\nconst vectorScratch2 = /*#__PURE__*/ new Vector3()\n\nexport class Geodetic {\n  static readonly MIN_LONGITUDE = -Math.PI\n  static readonly MAX_LONGITUDE = Math.PI\n  static readonly MIN_LATITUDE = -Math.PI / 2\n  static readonly MAX_LATITUDE = Math.PI / 2\n\n  constructor(\n    public longitude = 0,\n    public latitude = 0,\n    public height = 0\n  ) {}\n\n  set(longitude: number, latitude: number, height?: number): this {\n    this.longitude = longitude\n    this.latitude = latitude\n    if (height != null) {\n      this.height = height\n    }\n    return this\n  }\n\n  clone(): Geodetic {\n    return new Geodetic(this.longitude, this.latitude, this.height)\n  }\n\n  copy(other: GeodeticLike): this {\n    this.longitude = other.longitude\n    this.latitude = other.latitude\n    this.height = other.height\n    return this\n  }\n\n  equals(other: GeodeticLike): boolean {\n    return (\n      other.longitude === this.longitude &&\n      other.latitude === this.latitude &&\n      other.height === this.height\n    )\n  }\n\n  setLongitude(value: number): this {\n    this.longitude = value\n    return this\n  }\n\n  setLatitude(value: number): this {\n    this.latitude = value\n    return this\n  }\n\n  setHeight(value: number): this {\n    this.height = value\n    return this\n  }\n\n  normalize(): this {\n    if (this.longitude < Geodetic.MIN_LONGITUDE) {\n      this.longitude += Math.PI * 2\n    }\n    return this\n  }\n\n  // See: https://en.wikipedia.org/wiki/Geographic_coordinate_conversion\n  // Reference: https://github.com/CesiumGS/cesium/blob/1.122/packages/engine/Source/Core/Geodetic.js#L119\n  setFromECEF(\n    position: Vector3,\n    options?: ProjectOnEllipsoidSurfaceOptions & {\n      ellipsoid?: Ellipsoid\n    }\n  ): this {\n    const ellipsoid = options?.ellipsoid ?? Ellipsoid.WGS84\n    const reciprocalRadiiSquared =\n      ellipsoid.reciprocalRadiiSquared(vectorScratch1)\n    const projection = projectOnEllipsoidSurface(\n      position,\n      reciprocalRadiiSquared,\n      vectorScratch2,\n      options\n    )\n    if (projection == null) {\n      throw new Error(\n        `Could not project position to ellipsoid surface: ${position.toArray()}`\n      )\n    }\n    const normal = vectorScratch1\n      .multiplyVectors(projection, reciprocalRadiiSquared)\n      .normalize()\n    this.longitude = Math.atan2(normal.y, normal.x)\n    this.latitude = Math.asin(normal.z)\n    const height = vectorScratch1.subVectors(position, projection)\n    this.height = Math.sign(height.dot(position)) * height.length()\n    return this\n  }\n\n  // See: https://en.wikipedia.org/wiki/Geographic_coordinate_conversion\n  // Reference: https://github.com/CesiumGS/cesium/blob/1.122/packages/engine/Source/Core/Cartesian3.js#L916\n  toECEF(\n    result = new Vector3(),\n    options?: {\n      ellipsoid?: Ellipsoid\n    }\n  ): Vector3 {\n    const ellipsoid = options?.ellipsoid ?? Ellipsoid.WGS84\n    const radiiSquared = vectorScratch1.multiplyVectors(\n      ellipsoid.radii,\n      ellipsoid.radii\n    )\n    const cosLatitude = Math.cos(this.latitude)\n    const normal = vectorScratch2\n      .set(\n        cosLatitude * Math.cos(this.longitude),\n        cosLatitude * Math.sin(this.longitude),\n        Math.sin(this.latitude)\n      )\n      .normalize()\n    result.multiplyVectors(radiiSquared, normal)\n    return result\n      .divideScalar(Math.sqrt(normal.dot(result)))\n      .add(normal.multiplyScalar(this.height))\n  }\n\n  fromArray(array: readonly number[], offset = 0): this {\n    this.longitude = array[offset]\n    this.latitude = array[offset + 1]\n    this.height = array[offset + 2]\n    return this\n  }\n\n  toArray(array: number[] = [], offset = 0): number[] {\n    array[offset] = this.longitude\n    array[offset + 1] = this.latitude\n    array[offset + 2] = this.height\n    return array\n  }\n\n  *[Symbol.iterator](): Generator<number> {\n    yield this.longitude\n    yield this.latitude\n    yield this.height\n  }\n}\n", "import { FileLoader, Loader } from 'three'\nimport invariant from 'tiny-invariant'\n\nexport class ArrayBufferLoader extends Loader<ArrayBuffer> {\n  override load(\n    url: string,\n    onLoad: (data: ArrayBuffer) => void,\n    onProgress?: (event: ProgressEvent) => void,\n    onError?: (error: unknown) => void\n  ): void {\n    const loader = new FileLoader(this.manager)\n    loader.setResponseType('arraybuffer')\n    loader.setRequestHeader(this.requestHeader)\n    loader.setPath(this.path)\n    loader.setWithCredentials(this.withCredentials)\n    loader.load(\n      url,\n      arrayBuffer => {\n        invariant(arrayBuffer instanceof ArrayBuffer)\n        try {\n          onLoad(arrayBuffer)\n        } catch (error) {\n          if (onError != null) {\n            onError(error)\n          } else {\n            console.error(error)\n          }\n          this.manager.itemError(url)\n        }\n      },\n      onProgress,\n      onError\n    )\n  }\n}\n", "export function assertType<T>(value: unknown): asserts value is T {}\n", "import {\n  Box3,\n  BufferAttribute,\n  BufferGeometry,\n  Sphere,\n  Vector3,\n  type TypedArray,\n  type Vector3Like\n} from 'three'\n\nexport interface BufferGeometryLike {\n  attributes: Record<\n    string,\n    {\n      array: TypedArray\n      itemSize: number\n      normalized?: boolean\n    }\n  >\n  index?: {\n    array: TypedArray\n    itemSize: number\n    normalized?: boolean\n  } | null\n  boundingBox?: {\n    min: Vector3Like\n    max: Vector3Like\n  } | null\n  boundingSphere?: {\n    center: Vector3Like\n    radius: number\n  } | null\n}\n\nexport function toBufferGeometryLike(\n  geometry: BufferGeometry\n): [BufferGeometryLike, ArrayBuffer[]] {\n  const { attributes, index, boundingBox, boundingSphere } = geometry\n  return [\n    { attributes, index, boundingBox, boundingSphere },\n    [\n      ...Object.values(geometry.attributes).map(\n        attribute => attribute.array.buffer\n      ),\n      geometry.index?.array.buffer\n    ].filter(buffer => buffer != null)\n  ]\n}\n\nexport function fromBufferGeometryLike(\n  input: BufferGeometryLike,\n  result = new BufferGeometry()\n): BufferGeometry {\n  for (const [name, attribute] of Object.entries(input.attributes)) {\n    result.setAttribute(\n      name,\n      new BufferAttribute(\n        attribute.array,\n        attribute.itemSize,\n        attribute.normalized\n      )\n    )\n  }\n  result.index =\n    input.index != null\n      ? new BufferAttribute(\n          input.index.array,\n          input.index.itemSize,\n          input.index.normalized\n        )\n      : null\n  if (input.boundingBox != null) {\n    const { min, max } = input.boundingBox\n    result.boundingBox = new Box3(\n      new Vector3(min.x, min.y, min.z),\n      new Vector3(max.x, max.y, max.z)\n    )\n  }\n  if (input.boundingSphere != null) {\n    const { center, radius } = input.boundingSphere\n    result.boundingSphere = new Sphere(\n      new Vector3(center.x, center.y, center.z),\n      radius\n    )\n  }\n  return result\n}\n", "import type { WebGLRenderer } from 'three'\n\nexport function isFloatLinearSupported(renderer: WebGLRenderer): boolean {\n  return renderer.getContext().getExtension('OES_texture_float_linear') != null\n}\n", "export const STBN_TEXTURE_WIDTH = 128\nexport const STBN_TEXTURE_HEIGHT = 128\nexport const STBN_TEXTURE_DEPTH = 64\n\n// Reference to the latest assets.\nconst ref = '9627216cc50057994c98a2118f3c4a23765d43b9'\nexport const DEFAULT_STBN_URL = `https://media.githubusercontent.com/media/takram-design-engineering/three-geospatial/${ref}/packages/core/assets/stbn.bin`\n", null, null, null, null, null, null, null, null, null, "import {\n  Float16Array,\n  type Float16ArrayConstructor\n} from '@petamoriken/float16'\n\nexport type TypedArray =\n  | Int8Array\n  | Uint8Array\n  | Uint8ClampedArray\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float16Array\n  | Float32Array\n  | Float64Array\n\nexport type TypedArrayConstructor =\n  | Int8ArrayConstructor\n  | Uint8ArrayConstructor\n  | Uint8ClampedArrayConstructor\n  | Int16ArrayConstructor\n  | Uint16ArrayConstructor\n  | Int32ArrayConstructor\n  | Uint32ArrayConstructor\n  | Float16ArrayConstructor\n  | Float32ArrayConstructor\n  | Float64ArrayConstructor\n\nexport function isTypedArray(value: unknown): value is TypedArray {\n  return (\n    value instanceof Int8Array ||\n    value instanceof Uint8Array ||\n    value instanceof Uint8ClampedArray ||\n    value instanceof Int16Array ||\n    value instanceof Uint16Array ||\n    value instanceof Int32Array ||\n    value instanceof Uint32Array ||\n    value instanceof Float16Array ||\n    value instanceof Float32Array ||\n    value instanceof Float64Array\n  )\n}\n\nexport { Float16Array }\n", "import { Loader, type LoadingManager } from 'three'\n\nimport { ArrayBufferLoader } from './ArrayBufferLoader'\nimport type { TypedArray } from './typedArray'\nimport type { TypedArrayParser } from './typedArrayParsers'\n\nexport class TypedArrayLoader<T extends TypedArray> extends Loader<T> {\n  parser: TypedArrayParser<T>\n\n  constructor(parser: TypedArrayParser<T>, manager?: LoadingManager) {\n    super(manager)\n    this.parser = parser\n  }\n\n  override load(\n    url: string,\n    onLoad: (data: T) => void,\n    onProgress?: (event: ProgressEvent) => void,\n    onError?: (error: unknown) => void\n  ): void {\n    const loader = new ArrayBufferLoader(this.manager)\n    loader.setRequestHeader(this.requestHeader)\n    loader.setPath(this.path)\n    loader.setWithCredentials(this.withCredentials)\n    loader.load(\n      url,\n      arrayBuffer => {\n        try {\n          onLoad(this.parser(arrayBuffer))\n        } catch (error) {\n          if (onError != null) {\n            onError(error)\n          } else {\n            console.error(error)\n          }\n          this.manager.itemError(url)\n        }\n      },\n      onProgress,\n      onError\n    )\n  }\n}\n", "import {\n  ByteType,\n  FloatType,\n  HalfFloatType,\n  IntType,\n  LinearFilter,\n  Loader,\n  RGBAFormat,\n  ShortType,\n  UnsignedByteType,\n  UnsignedIntType,\n  UnsignedShortType,\n  type ColorSpace,\n  type Data3DTexture,\n  type DataTexture,\n  type LoadingManager,\n  type MagnificationTextureFilter,\n  type Mapping,\n  type MinificationTextureFilter,\n  type PixelFormat,\n  type TextureDataType,\n  type Wrapping\n} from 'three'\nimport invariant from 'tiny-invariant'\nimport type { Class } from 'type-fest'\n\nimport { Float16Array, type TypedArray } from './typedArray'\nimport { TypedArrayLoader } from './TypedArrayLoader'\nimport type { TypedArrayParser } from './typedArrayParsers'\n\nfunction getTextureDataType(array: TypedArray): TextureDataType {\n  // prettier-ignore\n  const type = (\n    array instanceof Int8Array ? ByteType :\n    array instanceof Uint8Array ? UnsignedByteType :\n    array instanceof Uint8ClampedArray ? UnsignedByteType :\n    array instanceof Int16Array ? ShortType :\n    array instanceof Uint16Array ? UnsignedShortType :\n    array instanceof Int32Array ? IntType :\n    array instanceof Uint32Array ? UnsignedIntType :\n    array instanceof Float16Array ? HalfFloatType :\n    array instanceof Float32Array ? FloatType :\n    array instanceof Float64Array ? FloatType :\n    null\n  )\n  invariant(type != null)\n  return type\n}\n\nexport interface DataTextureLoaderOptions {\n  width?: number\n  height?: number\n  depth?: number\n  mapping?: Mapping\n  wrapS?: Wrapping\n  wrapT?: Wrapping\n  wrapR?: Wrapping\n  magFilter?: MagnificationTextureFilter\n  minFilter?: MinificationTextureFilter\n  format?: PixelFormat\n  type?: TextureDataType\n  anisotropy?: number\n  colorSpace?: ColorSpace\n  manager?: LoadingManager\n}\n\nexport class DataTextureLoader<\n  T extends DataTexture | Data3DTexture = DataTexture | Data3DTexture,\n  U extends TypedArray = TypedArray\n> extends Loader<T> {\n  textureClass: Class<T>\n  parser: TypedArrayParser<U>\n  options: DataTextureLoaderOptions\n\n  constructor(\n    textureClass: Class<T>,\n    parser: TypedArrayParser<U>,\n    options: DataTextureLoaderOptions = {},\n    manager?: LoadingManager\n  ) {\n    super(manager)\n    this.textureClass = textureClass\n    this.parser = parser\n    this.options = {\n      format: RGBAFormat,\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      ...options\n    }\n  }\n\n  override load(\n    url: string,\n    onLoad?: (data: T) => void,\n    onProgress?: (event: ProgressEvent) => void,\n    onError?: (error: unknown) => void\n  ): T {\n    // eslint-disable-next-line new-cap\n    const texture = new this.textureClass()\n\n    const loader = new TypedArrayLoader(this.parser, this.manager)\n    loader.setRequestHeader(this.requestHeader)\n    loader.setPath(this.path)\n    loader.setWithCredentials(this.withCredentials)\n    loader.load(\n      url,\n      array => {\n        texture.image.data =\n          array instanceof Float16Array ? new Uint16Array(array.buffer) : array\n        const { width, height, depth, ...options } = this.options\n        if (width != null) {\n          texture.image.width = width\n        }\n        if (height != null) {\n          texture.image.height = height\n        }\n        if ('depth' in texture.image && depth != null) {\n          texture.image.depth = depth\n        }\n\n        // Populate the default texture type for the array type.\n        texture.type = getTextureDataType(array)\n\n        Object.assign(texture, options)\n        texture.needsUpdate = true\n        onLoad?.(texture)\n      },\n      onProgress,\n      onError\n    )\n\n    return texture\n  }\n}\n", "import { MathUtils } from 'three'\n\nexport const clamp = MathUtils.clamp\nexport const euclideanModulo = MathUtils.euclideanModulo\nexport const inverseLerp = MathUtils.inverseLerp\nexport const lerp = MathUtils.lerp\nexport const radians = MathUtils.degToRad\nexport const degrees = MathUtils.radToDeg\nexport const isPowerOfTwo = MathUtils.isPowerOfTwo\nexport const ceilPowerOfTwo = MathUtils.ceilPowerOfTwo\nexport const floorPowerOfTwo = MathUtils.floorPowerOfTwo\nexport const normalize = MathUtils.normalize\n\nexport function remap(x: number, min1: number, max1: number): number\nexport function remap(\n  x: number,\n  min1: number,\n  max1: number,\n  min2: number,\n  max2: number\n): number\nexport function remap(\n  x: number,\n  min1: number,\n  max1: number,\n  min2 = 0,\n  max2 = 1\n): number {\n  return MathUtils.mapLinear(x, min1, max1, min2, max2)\n}\n\nexport function remapClamped(x: number, min1: number, max1: number): number\nexport function remapClamped(\n  x: number,\n  min1: number,\n  max1: number,\n  min2: number,\n  max2: number\n): number\nexport function remapClamped(\n  x: number,\n  min1: number,\n  max1: number,\n  min2 = 0,\n  max2 = 1\n): number {\n  return clamp(MathUtils.mapLinear(x, min1, max1, min2, max2), min2, max2)\n}\n\n// Prefer glsl's argument order which differs from that of MathUtils.\nexport function smoothstep(min: number, max: number, x: number): number {\n  if (x <= min) {\n    return 0\n  }\n  if (x >= max) {\n    return 1\n  }\n  x = (x - min) / (max - min)\n  return x * x * (3 - 2 * x)\n}\n\nexport function saturate(x: number): number {\n  return Math.min(Math.max(x, 0), 1)\n}\n\nexport function closeTo(\n  a: number,\n  b: number,\n  relativeEpsilon: number,\n  absoluteEpsilon = relativeEpsilon\n): boolean {\n  const diff = Math.abs(a - b)\n  return (\n    diff <= absoluteEpsilon ||\n    diff <= relativeEpsilon * Math.max(Math.abs(a), Math.abs(b))\n  )\n}\n", "import { Material } from 'three'\n\nimport { clamp } from './math'\n\ninterface MaterialLike {\n  defines?: Record<string, string>\n  set needsUpdate(value: boolean)\n}\n\ninterface EffectLike {\n  defines: Map<string, string>\n}\n\nexport function define(name: string) {\n  return <T extends MaterialLike | EffectLike, K extends keyof T>(\n    target: T[K] extends boolean ? T : never,\n    propertyKey: K\n  ) => {\n    if (target instanceof Material) {\n      Object.defineProperty(target, propertyKey, {\n        enumerable: true,\n        get(this: Extract<T, Material>): boolean {\n          return this.defines?.[name] != null\n        },\n        set(this: Extract<T, Material>, value: boolean) {\n          if (value !== this[propertyKey]) {\n            if (value) {\n              this.defines ??= {}\n              this.defines[name] = '1'\n            } else {\n              delete this.defines?.[name]\n            }\n            this.needsUpdate = true\n          }\n        }\n      })\n    } else {\n      Object.defineProperty(target, propertyKey, {\n        enumerable: true,\n        get(this: Extract<T, EffectLike>): boolean {\n          return this.defines.has(name)\n        },\n        set(this: Extract<T, EffectLike>, value: boolean) {\n          if (value !== this[propertyKey]) {\n            if (value) {\n              this.defines.set(name, '1')\n            } else {\n              this.defines.delete(name)\n            }\n            ;(this as any).setChanged() // Bypass protected privilege\n          }\n        }\n      })\n    }\n  }\n}\n\nexport interface DefineIntDecoratorOptions {\n  min?: number\n  max?: number\n}\n\nexport function defineInt(\n  name: string,\n  {\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER\n  }: DefineIntDecoratorOptions = {}\n) {\n  return <T extends MaterialLike | EffectLike, K extends keyof T>(\n    target: T[K] extends number ? T : never,\n    propertyKey: K\n  ) => {\n    if (target instanceof Material) {\n      Object.defineProperty(target, propertyKey, {\n        enumerable: true,\n        get(this: Extract<T, Material>): number {\n          const value = this.defines?.[name]\n          return value != null ? parseInt(value) : 0\n        },\n        set(this: Extract<T, Material>, value: number) {\n          const prevValue = this[propertyKey]\n          if (value !== prevValue) {\n            this.defines ??= {}\n            this.defines[name] = clamp(value, min, max).toFixed(0)\n            this.needsUpdate = true\n          }\n        }\n      })\n    } else {\n      Object.defineProperty(target, propertyKey, {\n        enumerable: true,\n        get(this: Extract<T, EffectLike>): number {\n          const value = this.defines.get(name)\n          return value != null ? parseInt(value) : 0\n        },\n        set(this: Extract<T, EffectLike>, value: number) {\n          const prevValue = this[propertyKey]\n          if (value !== prevValue) {\n            this.defines.set(name, clamp(value, min, max).toFixed(0))\n            ;(this as any).setChanged() // Bypass protected privilege\n          }\n        }\n      })\n    }\n  }\n}\n\nexport interface DefineFloatDecoratorOptions {\n  min?: number\n  max?: number\n  precision?: number\n}\n\nexport function defineFloat(\n  name: string,\n  {\n    min = -Infinity,\n    max = Infinity,\n    precision = 7\n  }: DefineFloatDecoratorOptions = {}\n) {\n  return <T extends MaterialLike | EffectLike, K extends keyof T>(\n    target: T[K] extends number ? T : never,\n    propertyKey: K\n  ) => {\n    if (target instanceof Material) {\n      Object.defineProperty(target, propertyKey, {\n        enumerable: true,\n        get(this: Extract<T, Material>): number {\n          const value = this.defines?.[name]\n          return value != null ? parseFloat(value) : 0\n        },\n        set(this: Extract<T, Material>, value: number) {\n          const prevValue = this[propertyKey]\n          if (value !== prevValue) {\n            this.defines ??= {}\n            this.defines[name] = clamp(value, min, max).toFixed(precision)\n            this.needsUpdate = true\n          }\n        }\n      })\n    } else {\n      Object.defineProperty(target, propertyKey, {\n        enumerable: true,\n        get(this: Extract<T, EffectLike>): number {\n          const value = this.defines.get(name)\n          return value != null ? parseFloat(value) : 0\n        },\n        set(this: Extract<T, EffectLike>, value: number) {\n          const prevValue = this[propertyKey]\n          if (value !== prevValue) {\n            this.defines.set(name, clamp(value, min, max).toFixed(precision))\n            ;(this as any).setChanged() // Bypass protected privilege\n          }\n        }\n      })\n    }\n  }\n}\n\nexport interface DefineExpressionDecoratorOptions {\n  validate?: (value: string) => boolean\n}\n\nexport function defineExpression(\n  name: string,\n  { validate }: DefineExpressionDecoratorOptions = {}\n) {\n  return <T extends MaterialLike | EffectLike, K extends keyof T>(\n    target: T[K] extends string ? T : never,\n    propertyKey: K\n  ) => {\n    if (target instanceof Material) {\n      Object.defineProperty(target, propertyKey, {\n        enumerable: true,\n        get(this: Extract<T, Material>): string {\n          return this.defines?.[name] ?? ''\n        },\n        set(this: Extract<T, Material>, value: string) {\n          if (value !== this[propertyKey]) {\n            if (validate?.(value) === false) {\n              console.error(`Expression validation failed: ${value}`)\n              return\n            }\n            this.defines ??= {}\n            this.defines[name] = value\n            this.needsUpdate = true\n          }\n        }\n      })\n    } else {\n      Object.defineProperty(target, propertyKey, {\n        enumerable: true,\n        get(this: Extract<T, EffectLike>): string {\n          return this.defines.get(name) ?? ''\n        },\n        set(this: Extract<T, EffectLike>, value: string) {\n          if (value !== this[propertyKey]) {\n            if (validate?.(value) === false) {\n              console.error(`Expression validation failed: ${value}`)\n              return\n            }\n            this.defines.set(name, value)\n            ;(this as any).setChanged() // Bypass protected privilege\n          }\n        }\n      })\n    }\n  }\n}\n", "import type { Uniform } from 'three'\n\n// TODO: Make mutable value types (e.g. vectors, matrices) read-only.\n\n// Maps argument of type [T1, K1[], T2, K2[], ...] to:\n// { [K in K1]: T1[K],\n//   [K in K2]: T2[K], ... }\nexport type PropertyShorthand<Args extends readonly unknown[]> =\n  Args extends readonly [infer T, infer K, ...infer Rest]\n    ? K extends readonly string[]\n      ? K[number] extends keyof T\n        ? Rest extends readonly unknown[]\n          ? { [P in K[number]]: T[P] } & PropertyShorthand<Rest>\n          : { [P in K[number]]: T[P] }\n        : never // K must be keyof T\n      : never // K must be an array\n    : {} // Termination\n\nexport function definePropertyShorthand<T, Args extends readonly unknown[]>(\n  destination: T,\n  ...sourceKeysArgs: [...Args]\n): T & PropertyShorthand<Args> {\n  const descriptors: PropertyDescriptorMap = {}\n  for (let i = 0; i < sourceKeysArgs.length; i += 2) {\n    const source = sourceKeysArgs[i]\n    const keys = sourceKeysArgs[i + 1] as ReadonlyArray<keyof typeof source>\n    for (const key of keys) {\n      descriptors[key] = {\n        enumerable: true,\n        get: () => source[key],\n        set: (value: any) => {\n          source[key] = value\n        }\n      }\n    }\n  }\n  Object.defineProperties(destination, descriptors)\n  return destination as T & PropertyShorthand<Args>\n}\n\n// The argument of defineUniformShorthand can also be variadic, but I can't\n// think of any practical use cases for it.\n\nexport type UniformShorthand<\n  T extends { uniforms: Record<K, Uniform> },\n  K extends keyof T['uniforms']\n> = {\n  [P in K]: T['uniforms'][P] extends Uniform<infer U> ? U : never\n}\n\nexport function defineUniformShorthand<\n  T,\n  S extends { uniforms: Record<K, Uniform> },\n  K extends keyof S['uniforms']\n>(destination: T, source: S, keys: readonly K[]): T & UniformShorthand<S, K> {\n  const descriptors: PropertyDescriptorMap = {}\n  for (const key of keys) {\n    descriptors[key] = {\n      enumerable: true,\n      get: () => source.uniforms[key].value,\n      set: (value: S['uniforms'][K]) => {\n        source.uniforms[key].value = value\n      }\n    }\n  }\n  Object.defineProperties(destination, descriptors)\n  return destination as T & UniformShorthand<S, K>\n}\n", null, null, null, "import { Data3DTexture, Loader, type LoadingManager } from 'three'\nimport { EXRLoader } from 'three-stdlib'\n\nexport interface EXR3DTextureLoaderOptions {\n  width?: number\n  height?: number\n  depth?: number\n}\n\nexport class EXR3DTextureLoader extends Loader<Data3DTexture> {\n  options: EXR3DTextureLoaderOptions\n\n  constructor(\n    options: EXR3DTextureLoaderOptions = {},\n    manager?: LoadingManager\n  ) {\n    super(manager)\n    this.options = options\n  }\n\n  override load(\n    url: string,\n    onLoad?: (data: Data3DTexture) => void,\n    onProgress?: (event: ProgressEvent) => void,\n    onError?: (error: unknown) => void\n  ): Data3DTexture {\n    const { width, height, depth } = this.options\n    const texture = new Data3DTexture(null, width, height, depth)\n\n    const loader = new EXRLoader(this.manager)\n    loader.setRequestHeader(this.requestHeader)\n    loader.setPath(this.path)\n    loader.setWithCredentials(this.withCredentials)\n    loader.load(\n      url,\n      exr => {\n        const { image } = exr\n        texture.image = {\n          data: image.data,\n          width: width ?? image.width,\n          height: height ?? image.height,\n          depth: depth ?? Math.sqrt(image.height)\n        }\n        texture.type = exr.type\n        texture.format = exr.format\n        texture.colorSpace = exr.colorSpace\n        texture.needsUpdate = true\n\n        try {\n          onLoad?.(texture)\n        } catch (error) {\n          if (onError != null) {\n            onError(error)\n          } else {\n            console.error(error)\n          }\n          this.manager.itemError(url)\n        }\n      },\n      onProgress,\n      onError\n    )\n\n    return texture\n  }\n}\n", "import { DataTexture, Loader, type LoadingManager } from 'three'\nimport { EXRLoader } from 'three-stdlib'\n\nexport interface EXRTextureLoaderOptions {\n  width?: number\n  height?: number\n}\n\nexport class EXRTextureLoader extends Loader<DataTexture> {\n  options: EXRTextureLoaderOptions\n\n  constructor(options: EXRTextureLoaderOptions = {}, manager?: LoadingManager) {\n    super(manager)\n    this.options = options\n  }\n\n  override load(\n    url: string,\n    onLoad?: (data: DataTexture) => void,\n    onProgress?: (event: ProgressEvent) => void,\n    onError?: (error: unknown) => void\n  ): DataTexture {\n    const { width, height } = this.options\n    const texture = new DataTexture(null, width, height)\n\n    const loader = new EXRLoader(this.manager)\n    loader.setRequestHeader(this.requestHeader)\n    loader.setPath(this.path)\n    loader.setWithCredentials(this.withCredentials)\n    loader.load(\n      url,\n      exr => {\n        const { image } = exr\n        texture.image = {\n          data: image.data,\n          width: width ?? image.width,\n          height: height ?? image.height\n        }\n        texture.type = exr.type\n        texture.format = exr.format\n        texture.colorSpace = exr.colorSpace\n        texture.needsUpdate = true\n\n        try {\n          onLoad?.(texture)\n        } catch (error) {\n          if (onError != null) {\n            onError(error)\n          } else {\n            console.error(error)\n          }\n          this.manager.itemError(url)\n        }\n      },\n      onProgress,\n      onError\n    )\n\n    return texture\n  }\n}\n", "import { Matrix4, Quaternion, Ray, Vector3, type Camera } from 'three'\n\nimport { Ellipsoid } from './Ellipsoid'\nimport { clamp } from './math'\n\nconst EPSILON = 0.000001\n\nconst eastScratch = /*#__PURE__*/ new Vector3()\nconst northScratch = /*#__PURE__*/ new Vector3()\nconst upScratch = /*#__PURE__*/ new Vector3()\nconst vectorScratch1 = /*#__PURE__*/ new Vector3()\nconst vectorScratch2 = /*#__PURE__*/ new Vector3()\nconst vectorScratch3 = /*#__PURE__*/ new Vector3()\nconst matrixScratch = /*#__PURE__*/ new Matrix4()\nconst quaternionScratch = /*#__PURE__*/ new Quaternion()\nconst rayScratch = /*#__PURE__*/ new Ray()\n\nexport class PointOfView {\n  // Distance from the target.\n  private _distance!: number\n\n  // Radians from the local east direction relative from true north, measured\n  // clockwise (90 degrees is true north, and -90 is true south).\n  heading: number\n\n  // Radians from the local horizon plane, measured with positive values looking\n  // up (90 degrees is straight up, -90 is straight down).\n  private _pitch!: number\n\n  roll: number\n\n  constructor(distance = 0, heading = 0, pitch = 0, roll = 0) {\n    this.distance = distance\n    this.heading = heading\n    this.pitch = pitch\n    this.roll = roll\n  }\n\n  get distance(): number {\n    return this._distance\n  }\n\n  set distance(value: number) {\n    this._distance = Math.max(value, EPSILON)\n  }\n\n  get pitch(): number {\n    return this._pitch\n  }\n\n  set pitch(value: number) {\n    this._pitch = clamp(value, -Math.PI / 2 + EPSILON, Math.PI / 2 - EPSILON)\n  }\n\n  set(distance: number, heading: number, pitch: number, roll?: number): this {\n    this.distance = distance\n    this.heading = heading\n    this.pitch = pitch\n    if (roll != null) {\n      this.roll = roll\n    }\n    return this\n  }\n\n  clone(): PointOfView {\n    return new PointOfView(this.distance, this.heading, this.pitch, this.roll)\n  }\n\n  copy(other: PointOfView): this {\n    this.distance = other.distance\n    this.heading = other.heading\n    this.pitch = other.pitch\n    this.roll = other.roll\n    return this\n  }\n\n  equals(other: PointOfView): boolean {\n    return (\n      other.distance === this.distance &&\n      other.heading === this.heading &&\n      other.pitch === this.pitch &&\n      other.roll === this.roll\n    )\n  }\n\n  decompose(\n    target: Vector3,\n    eye: Vector3,\n    quaternion: Quaternion,\n    up?: Vector3,\n    ellipsoid = Ellipsoid.WGS84\n  ): void {\n    ellipsoid.getEastNorthUpVectors(\n      target,\n      eastScratch,\n      northScratch,\n      upScratch\n    )\n    up?.copy(upScratch)\n\n    // h = east * cos(heading) + north * sin(heading)\n    // v = h * cos(pitch) + up * sin(pitch)\n    const offset = vectorScratch1\n      .copy(eastScratch)\n      .multiplyScalar(Math.cos(this.heading))\n      .add(\n        vectorScratch2.copy(northScratch).multiplyScalar(Math.sin(this.heading))\n      )\n      .multiplyScalar(Math.cos(this.pitch))\n      .add(vectorScratch2.copy(upScratch).multiplyScalar(Math.sin(this.pitch)))\n      .normalize()\n      .multiplyScalar(this.distance)\n    eye.copy(target).sub(offset)\n\n    if (this.roll !== 0) {\n      const rollAxis = vectorScratch1.copy(target).sub(eye).normalize()\n      upScratch.applyQuaternion(\n        quaternionScratch.setFromAxisAngle(rollAxis, this.roll)\n      )\n    }\n    quaternion.setFromRotationMatrix(\n      matrixScratch.lookAt(eye, target, upScratch)\n    )\n  }\n\n  setFromCamera(camera: Camera, ellipsoid = Ellipsoid.WGS84): this | undefined {\n    const eye = vectorScratch1.setFromMatrixPosition(camera.matrixWorld)\n    const direction = vectorScratch2\n      .set(0, 0, 0.5)\n      .unproject(camera)\n      .sub(eye)\n      .normalize()\n    const target = ellipsoid.getIntersection(rayScratch.set(eye, direction))\n    if (target == null) {\n      return\n    }\n\n    this.distance = eye.distanceTo(target)\n    ellipsoid.getEastNorthUpVectors(\n      target,\n      eastScratch,\n      northScratch,\n      upScratch\n    )\n    this.heading = Math.atan2(\n      northScratch.dot(direction),\n      eastScratch.dot(direction)\n    )\n    this.pitch = Math.asin(upScratch.dot(direction))\n\n    // Need to rotate camera's up to evaluate it in world space.\n    const up = vectorScratch1.copy(camera.up).applyQuaternion(camera.quaternion)\n    const s = vectorScratch3\n      .copy(direction)\n      .multiplyScalar(-up.dot(direction))\n      .add(up)\n      .normalize()\n    const t = vectorScratch1\n      .copy(direction)\n      .multiplyScalar(-upScratch.dot(direction))\n      .add(upScratch)\n      .normalize()\n    const x = t.dot(s)\n    const y = direction.dot(t.cross(s))\n    this.roll = Math.atan2(y, x)\n\n    return this\n  }\n}\n", "import { Geodetic } from './Geodetic'\n\nexport type RectangleTuple = [number, number, number, number]\n\nexport interface RectangleLike {\n  readonly west: number\n  readonly south: number\n  readonly east: number\n  readonly north: number\n}\n\nexport class Rectangle {\n  static readonly MAX = /*#__PURE__*/ new Rectangle(\n    Geodetic.MIN_LONGITUDE,\n    Geodetic.MIN_LATITUDE,\n    Geodetic.MAX_LONGITUDE,\n    Geodetic.MAX_LATITUDE\n  )\n\n  constructor(\n    public west = 0,\n    public south = 0,\n    public east = 0,\n    public north = 0\n  ) {}\n\n  get width(): number {\n    let east = this.east\n    if (east < this.west) {\n      east += Math.PI * 2\n    }\n    return east - this.west\n  }\n\n  get height(): number {\n    return this.north - this.south\n  }\n\n  set(west: number, south: number, east: number, north: number): this {\n    this.west = west\n    this.south = south\n    this.east = east\n    this.north = north\n    return this\n  }\n\n  clone(): Rectangle {\n    return new Rectangle(this.west, this.south, this.east, this.north)\n  }\n\n  copy(other: RectangleLike): this {\n    this.west = other.west\n    this.south = other.south\n    this.east = other.east\n    this.north = other.north\n    return this\n  }\n\n  equals(other: RectangleLike): boolean {\n    return (\n      other.west === this.west &&\n      other.south === this.south &&\n      other.east === this.east &&\n      other.north === this.north\n    )\n  }\n\n  at(x: number, y: number, result = new Geodetic()): Geodetic {\n    return result.set(\n      this.west + (this.east - this.west) * x,\n      this.north + (this.south - this.north) * y\n    )\n  }\n\n  fromArray(array: readonly number[], offset = 0): this {\n    this.west = array[offset]\n    this.south = array[offset + 1]\n    this.east = array[offset + 2]\n    this.north = array[offset + 3]\n    return this\n  }\n\n  toArray(array: number[] = [], offset = 0): number[] {\n    array[offset] = this.west\n    array[offset + 1] = this.south\n    array[offset + 2] = this.east\n    array[offset + 3] = this.north\n    return array\n  }\n\n  *[Symbol.iterator](): Generator<number> {\n    yield this.west\n    yield this.south\n    yield this.east\n    yield this.north\n  }\n}\n", "const includePattern = /^[ \\t]*#include +\"([\\w\\d./]+)\"/gm\n\ninterface Includes {\n  [key: string]: string | Includes\n}\n\nexport function resolveIncludes(source: string, includes: Includes): string {\n  return source.replace(includePattern, (match, path: string) => {\n    const components = path.split('/')\n    const include = components.reduce<string | Includes | undefined>(\n      (parent, component) =>\n        typeof parent !== 'string' && parent != null\n          ? parent[component]\n          : undefined,\n      includes\n    )\n    if (typeof include !== 'string') {\n      throw new Error(`Could not find include for ${path}.`)\n    }\n    return resolveIncludes(include, includes)\n  })\n}\n", "import { Float16Array, getFloat16 } from '@petamoriken/float16'\n\nimport type { TypedArray, TypedArrayConstructor } from './typedArray'\n\nlet hostLittleEndian: boolean | undefined\n\nfunction isHostLittleEndian(): boolean {\n  if (hostLittleEndian != null) {\n    return hostLittleEndian\n  }\n  const a = new Uint32Array([0x10000000])\n  const b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength)\n  hostLittleEndian = b[0] === 0\n  return hostLittleEndian\n}\n\ntype GetValue =\n  | keyof {\n      [K in keyof DataView as DataView[K] extends (byteOffset: number) => number\n        ? K\n        : never]: DataView[K]\n    }\n  | 'getFloat16'\n\nfunction parseTypedArray<T extends TypedArrayConstructor, K extends GetValue>(\n  buffer: ArrayBuffer,\n  TypedArray: T,\n  getValue: K,\n  littleEndian?: boolean\n): InstanceType<T>\n\nfunction parseTypedArray<K extends GetValue>(\n  buffer: ArrayBuffer,\n  TypedArray: TypedArrayConstructor,\n  getValue: K,\n  littleEndian = true\n): TypedArray {\n  if (littleEndian === isHostLittleEndian()) {\n    // eslint-disable-next-line\n    // @ts-ignore False positive type error in Node.js\n    return new TypedArray(buffer)\n  }\n  const data = Object.assign(new DataView(buffer), {\n    getFloat16(this: DataView, byteOffset: number, littleEndian?: boolean) {\n      return getFloat16(this, byteOffset, littleEndian)\n    }\n  })\n  const array = new TypedArray(data.byteLength / TypedArray.BYTES_PER_ELEMENT)\n  for (\n    let index = 0, byteIndex = 0;\n    index < array.length;\n    ++index, byteIndex += TypedArray.BYTES_PER_ELEMENT\n  ) {\n    array[index] = data[getValue](byteIndex, littleEndian)\n  }\n  return array\n}\n\nexport type TypedArrayParser<T extends TypedArray> = (\n  buffer: ArrayBuffer,\n  littleEndian?: boolean\n) => T\n\nexport const parseUint8Array: TypedArrayParser<Uint8Array> = buffer =>\n  new Uint8Array(buffer)\n\nexport const parseInt8Array: TypedArrayParser<Int8Array> = buffer =>\n  new Int8Array(buffer)\n\nexport const parseUint16Array: TypedArrayParser<Uint16Array> = (\n  buffer,\n  littleEndian\n) => parseTypedArray(buffer, Uint16Array, 'getUint16', littleEndian)\n\nexport const parseInt16Array: TypedArrayParser<Int16Array> = (\n  buffer,\n  littleEndian\n) => parseTypedArray(buffer, Int16Array, 'getInt16', littleEndian)\n\nexport const parseInt32Array: TypedArrayParser<Int32Array> = (\n  buffer,\n  littleEndian\n) => parseTypedArray(buffer, Int32Array, 'getInt32', littleEndian)\n\nexport const parseUint32Array: TypedArrayParser<Uint32Array> = (\n  buffer,\n  littleEndian\n) => parseTypedArray(buffer, Uint32Array, 'getUint32', littleEndian)\n\nexport const parseFloat16Array: TypedArrayParser<Float16Array> = (\n  buffer,\n  littleEndian\n) => parseTypedArray(buffer, Float16Array, 'getFloat16', littleEndian)\n\nexport const parseFloat32Array: TypedArrayParser<Float32Array> = (\n  buffer,\n  littleEndian\n) => parseTypedArray(buffer, Float32Array, 'getFloat32', littleEndian)\n\nexport const parseFloat64Array: TypedArrayParser<Float64Array> = (\n  buffer,\n  littleEndian\n) => parseTypedArray(buffer, Float64Array, 'getFloat64', littleEndian)\n", "import {\n  Data3DTexture,\n  NearestFilter,\n  RedFormat,\n  RepeatWrapping,\n  type LoadingManager\n} from 'three'\n\nimport {\n  STBN_TEXTURE_DEPTH,\n  STBN_TEXTURE_HEIGHT,\n  STBN_TEXTURE_WIDTH\n} from './constants'\nimport { DataTextureLoader } from './DataTextureLoader'\nimport { parseUint8Array } from './typedArrayParsers'\n\nexport class STBNLoader extends DataTextureLoader<Data3DTexture> {\n  constructor(manager?: LoadingManager) {\n    super(\n      Data3DTexture,\n      parseUint8Array,\n      {\n        format: RedFormat,\n        minFilter: NearestFilter,\n        magFilter: NearestFilter,\n        wrapS: RepeatWrapping,\n        wrapT: RepeatWrapping,\n        wrapR: RepeatWrapping,\n        width: STBN_TEXTURE_WIDTH,\n        height: STBN_TEXTURE_HEIGHT,\n        depth: STBN_TEXTURE_DEPTH\n      },\n      manager\n    )\n  }\n}\n", "export type TileCoordinateTuple = [number, number, number]\n\nexport interface TileCoordinateLike {\n  readonly x: number\n  readonly y: number\n  readonly z: number\n}\n\nfunction* traverseChildren(\n  x: number,\n  y: number,\n  z: number,\n  maxZ: number,\n  result?: TileCoordinate\n): Generator<TileCoordinate> {\n  if (z >= maxZ) {\n    return\n  }\n  const divisor = 2 ** z\n  const nextZ = z + 1\n  const scale = 2 ** nextZ\n  const nextX = Math.floor((x / divisor) * scale)\n  const nextY = Math.floor((y / divisor) * scale)\n  const children = [\n    [nextX, nextY, nextZ],\n    [nextX + 1, nextY, nextZ],\n    [nextX, nextY + 1, nextZ],\n    [nextX + 1, nextY + 1, nextZ]\n  ] as const\n  if (nextZ < maxZ) {\n    for (const child of children) {\n      for (const coord of traverseChildren(...child, maxZ, result)) {\n        yield coord\n      }\n    }\n  } else {\n    for (const child of children) {\n      yield (result ?? new TileCoordinate()).set(...child)\n    }\n  }\n}\n\nexport class TileCoordinate {\n  constructor(\n    public x = 0,\n    public y = 0,\n    public z = 0\n  ) {}\n\n  set(x: number, y: number, z?: number): this {\n    this.x = x\n    this.y = y\n    if (z != null) {\n      this.z = z\n    }\n    return this\n  }\n\n  clone(): TileCoordinate {\n    return new TileCoordinate(this.x, this.y, this.z)\n  }\n\n  copy(other: TileCoordinateLike): this {\n    this.x = other.x\n    this.y = other.y\n    this.z = other.z\n    return this\n  }\n\n  equals(other: TileCoordinateLike): boolean {\n    return other.x === this.x && other.y === this.y && other.z === this.z\n  }\n\n  getParent(result = new TileCoordinate()): TileCoordinate {\n    const divisor = 2 ** this.z\n    const x = this.x / divisor\n    const y = this.y / divisor\n    const z = this.z - 1\n    const scale = 2 ** z\n    return result.set(Math.floor(x * scale), Math.floor(y * scale), z)\n  }\n\n  *traverseChildren(\n    depth: number,\n    result?: TileCoordinate\n  ): Generator<TileCoordinate> {\n    const { x, y, z } = this\n    for (const coord of traverseChildren(x, y, z, z + depth, result)) {\n      yield coord\n    }\n  }\n\n  fromArray(array: readonly number[], offset = 0): this {\n    this.x = array[offset]\n    this.y = array[offset + 1]\n    this.z = array[offset + 2]\n    return this\n  }\n\n  toArray(array: number[] = [], offset = 0): number[] {\n    array[offset] = this.x\n    array[offset + 1] = this.y\n    array[offset + 2] = this.z\n    return array\n  }\n\n  *[Symbol.iterator](): Generator<number> {\n    yield this.x\n    yield this.y\n    yield this.z\n  }\n}\n", "import { Vector2 } from 'three'\n\nimport type { GeodeticLike } from './Geodetic'\nimport { Rectangle, type RectangleLike } from './Rectangle'\nimport { TileCoordinate, type TileCoordinateLike } from './TileCoordinate'\n\nconst vectorScratch = /*#__PURE__*/ new Vector2()\n\nexport interface TilingSchemeLike {\n  readonly width: number\n  readonly height: number\n  readonly rectangle: RectangleLike\n}\n\n// TODO: Support slippyMap and EPSG:3857\nexport class TilingScheme {\n  constructor(\n    public width = 2,\n    public height = 1,\n    public rectangle = Rectangle.MAX\n  ) {}\n\n  clone(): TilingScheme {\n    return new TilingScheme(this.width, this.height, this.rectangle.clone())\n  }\n\n  copy(other: TilingSchemeLike): this {\n    this.width = other.width\n    this.height = other.height\n    this.rectangle.copy(other.rectangle)\n    return this\n  }\n\n  getSize(z: number, result = new Vector2()): Vector2 {\n    return result.set(this.width << z, this.height << z)\n  }\n\n  // Reference: https://github.com/CesiumGS/cesium/blob/1.122/packages/engine/Source/Core/GeographicTilingScheme.js#L210\n  getTile(\n    geodetic: GeodeticLike,\n    z: number,\n    result = new TileCoordinate()\n  ): TileCoordinate {\n    const size = this.getSize(z, vectorScratch)\n    const { rectangle } = this\n    const width = rectangle.width / size.x\n    const height = rectangle.height / size.y\n    const { west, south, east } = rectangle\n    let longitude = geodetic.longitude\n    if (east < west) {\n      longitude += Math.PI * 2\n    }\n    let x = Math.floor((longitude - west) / width)\n    if (x >= size.x) {\n      x = size.x - 1\n    }\n    let y = Math.floor((geodetic.latitude - south) / height)\n    if (y >= size.y) {\n      y = size.y - 1\n    }\n    result.x = x\n    result.y = y\n    result.z = z\n    return result\n  }\n\n  // Reference: https://github.com/CesiumGS/cesium/blob/1.122/packages/engine/Source/Core/GeographicTilingScheme.js#L169\n  getRectangle(tile: TileCoordinateLike, result = new Rectangle()): Rectangle {\n    const size = this.getSize(tile.z, vectorScratch)\n    const { rectangle } = this\n    const width = rectangle.width / size.x\n    const height = rectangle.height / size.y\n    const { west, north } = rectangle\n    result.west = tile.x * width + west\n    result.east = (tile.x + 1) * width + west\n    result.north = north - (size.y - tile.y - 1) * height\n    result.south = north - (size.y - tile.y) * height\n    return result\n  }\n}\n", "// Based on: https://github.com/mrdoob/three.js/blob/r170/src/renderers/webgl/WebGLProgram.js#L294\n\nconst unrollLoopPattern =\n  /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*(?:i\\s*\\+\\+|\\+\\+\\s*i)\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g\n\nfunction loopReplacer(\n  match: string,\n  start: string,\n  end: string,\n  snippet: string\n): string {\n  let string = ''\n  for (let i = parseInt(start); i < parseInt(end); ++i) {\n    string += snippet\n      .replace(/\\[\\s*i\\s*\\]/g, '[' + i + ']')\n      .replace(/UNROLLED_LOOP_INDEX/g, `${i}`)\n  }\n  return string\n}\n\nexport function unrollLoops(string: string): string {\n  return string.replace(unrollLoopPattern, loopReplacer)\n}\n"],
  "mappings": "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GAC7B8T,EAAI,CAAC,IAAIH,EAAc3T,EAAI,CAAC,CAAC,GAC7B8T,EAAI,CAAC,IAAIH,EAAc3T,EAAI,CAAC,CAAC,GAC7B8T,EAAI,CAAC,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC9B8T,EAAI,CAAC,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC9B8T,EAAI,CAAC,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC9B8T,EAAI,CAAC,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC9B8T,EAAI,CAAC,IAAIH,EAAc3T,EAAI,CAAC,CAAC,GAC7B8T,EAAI,CAAC,IAAIH,EAAc3T,EAAI,CAAC,CAAC,GAC7B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,CAAC,CAAC,GAC9B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,CAAC,CAAC,GAC9B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,CAAC,CAAC,GAC9B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,CAAC,CAAC,GAC9B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC,GAC/B8T,EAAI,EAAE,IAAIH,EAAc3T,EAAI,EAAE,CAAC;IACjC;AACA,aAASiT,GAAWpT,GAAM;AACxB,YAAMgF,IAAI,MAAM,KAAK,IAAI,SAAW,GAC9BC,IAAI,MAAM,KAAK,IAAI,UAAU,EAAE,GAC/BoF,IAAI,MAAM,KAAK,IAAI,UAAU,CAAC,GAC9BhC,IAAI,MAAM,KAAK,IAAI,IAAI,UAAU,EAAE,GACnC9K,IAAI,MAAM,KAAK,IAAI,IAAI,UAAU,EAAE,GACnCD,IAAI,MAAM,KAAK,IAAI,IAAI,UAAU,CAAC,GAClC4W,IAAI,MAAM,KAAK,IAAI,IAAI,UAAU,EAAE;AAKzC,eAJIC,KAAQ,IAAI,MAAM,CAAC,GACnBC,KAAO,IAAI,MAAM,CAAC,GAClBC,IAAQ,IAAI,MAAM,CAAC,GACnBC,IAAQ,IAAI,MAAM,CAAC,GACdC,IAAM,GAAGA,IAAM,GAAG,EAAEA,GAAK;AAChC,YAAIC,IAASD,IAAM;AACnBJ,QAAAA,GAAM,CAAC,IAAI9J,IAAIrK,EAAKwU,IAAS,CAAC,GAC9BL,GAAM,CAAC,IAAI7W,IAAI0C,EAAKwU,IAAS,CAAC,GAC9BL,GAAM,CAAC,IAAI9J,IAAIrK,EAAKwU,IAAS,CAAC,GAC9BL,GAAM,CAAC,IAAI7W,IAAI0C,EAAKwU,IAAS,CAAC,GAC9BJ,GAAK,CAAC,IAAInP,IAAIjF,EAAKwU,IAAS,CAAC,IAAInM,IAAIrI,EAAKwU,IAAS,CAAC,IAAIjX,IAAIyC,EAAKwU,IAAS,CAAC,IAAIN,IAAIlU,EAAKwU,IAAS,CAAC,GAClGJ,GAAK,CAAC,IAAI/L,IAAIrI,EAAKwU,IAAS,CAAC,IAAIN,IAAIlU,EAAKwU,IAAS,CAAC,IAAIvP,IAAIjF,EAAKwU,IAAS,CAAC,IAAIjX,IAAIyC,EAAKwU,IAAS,CAAC,GAClGJ,GAAK,CAAC,IAAI7W,IAAIyC,EAAKwU,IAAS,CAAC,IAAIvP,IAAIjF,EAAKwU,IAAS,CAAC,IAAIN,IAAIlU,EAAKwU,IAAS,CAAC,IAAInM,IAAIrI,EAAKwU,IAAS,CAAC,GAClGJ,GAAK,CAAC,IAAIF,IAAIlU,EAAKwU,IAAS,CAAC,IAAIjX,IAAIyC,EAAKwU,IAAS,CAAC,IAAInM,IAAIrI,EAAKwU,IAAS,CAAC,IAAIvP,IAAIjF,EAAKwU,IAAS,CAAC,GAClGH,EAAM,CAAC,IAAIrP,KAAKhF,EAAKwU,IAAS,CAAC,IAAIxU,EAAKwU,IAAS,CAAC,IAClDH,EAAM,CAAC,IAAIrP,KAAKhF,EAAKwU,IAAS,CAAC,IAAIxU,EAAKwU,IAAS,CAAC,IAClDH,EAAM,CAAC,IAAIF,GAAM,CAAC,IAAIA,GAAM,CAAC,GAC7BE,EAAM,CAAC,IAAIF,GAAM,CAAC,IAAIA,GAAM,CAAC,GAC7BG,EAAM,CAAC,IAAID,EAAM,CAAC,IAAIA,EAAM,CAAC,GAC7BC,EAAM,CAAC,IAAID,EAAM,CAAC,IAAIA,EAAM,CAAC,GAC7BC,EAAM,CAAC,IAAID,EAAM,CAAC,IAAIA,EAAM,CAAC,GAC7BC,EAAM,CAAC,IAAID,EAAM,CAAC,IAAIA,EAAM,CAAC,GAC7BrU,EAAKwU,IAAS,CAAC,IAAIF,EAAM,CAAC,IAAIF,GAAK,CAAC,GACpCpU,EAAKwU,IAAS,CAAC,IAAIF,EAAM,CAAC,IAAIF,GAAK,CAAC,GACpCpU,EAAKwU,IAAS,CAAC,IAAIF,EAAM,CAAC,IAAIF,GAAK,CAAC,GACpCpU,EAAKwU,IAAS,CAAC,IAAIF,EAAM,CAAC,IAAIF,GAAK,CAAC,GACpCpU,EAAKwU,IAAS,CAAC,IAAIF,EAAM,CAAC,IAAIF,GAAK,CAAC,GACpCpU,EAAKwU,IAAS,CAAC,IAAIF,EAAM,CAAC,IAAIF,GAAK,CAAC,GACpCpU,EAAKwU,IAAS,CAAC,IAAIF,EAAM,CAAC,IAAIF,GAAK,CAAC,GACpCpU,EAAKwU,IAAS,CAAC,IAAIF,EAAM,CAAC,IAAIF,GAAK,CAAC;MACtC;AACA,eAASK,KAAS,GAAGA,KAAS,GAAG,EAAEA;AACjCN,QAAAA,GAAM,CAAC,IAAI9J,IAAIrK,EAAK,KAAKyU,EAAM,GAC/BN,GAAM,CAAC,IAAI7W,IAAI0C,EAAK,KAAKyU,EAAM,GAC/BN,GAAM,CAAC,IAAI9J,IAAIrK,EAAK,KAAKyU,EAAM,GAC/BN,GAAM,CAAC,IAAI7W,IAAI0C,EAAK,KAAKyU,EAAM,GAC/BL,GAAK,CAAC,IAAInP,IAAIjF,EAAK,IAAIyU,EAAM,IAAIpM,IAAIrI,EAAK,KAAKyU,EAAM,IAAIlX,IAAIyC,EAAK,KAAKyU,EAAM,IAAIP,IAAIlU,EAAK,KAAKyU,EAAM,GACrGL,GAAK,CAAC,IAAI/L,IAAIrI,EAAK,IAAIyU,EAAM,IAAIP,IAAIlU,EAAK,KAAKyU,EAAM,IAAIxP,IAAIjF,EAAK,KAAKyU,EAAM,IAAIlX,IAAIyC,EAAK,KAAKyU,EAAM,GACrGL,GAAK,CAAC,IAAI7W,IAAIyC,EAAK,IAAIyU,EAAM,IAAIxP,IAAIjF,EAAK,KAAKyU,EAAM,IAAIP,IAAIlU,EAAK,KAAKyU,EAAM,IAAIpM,IAAIrI,EAAK,KAAKyU,EAAM,GACrGL,GAAK,CAAC,IAAIF,IAAIlU,EAAK,IAAIyU,EAAM,IAAIlX,IAAIyC,EAAK,KAAKyU,EAAM,IAAIpM,IAAIrI,EAAK,KAAKyU,EAAM,IAAIxP,IAAIjF,EAAK,KAAKyU,EAAM,GACrGJ,EAAM,CAAC,IAAIrP,KAAKhF,EAAKyU,EAAM,IAAIzU,EAAK,KAAKyU,EAAM,IAC/CJ,EAAM,CAAC,IAAIrP,KAAKhF,EAAKyU,EAAM,IAAIzU,EAAK,KAAKyU,EAAM,IAC/CJ,EAAM,CAAC,IAAIF,GAAM,CAAC,IAAIA,GAAM,CAAC,GAC7BE,EAAM,CAAC,IAAIF,GAAM,CAAC,IAAIA,GAAM,CAAC,GAC7BG,EAAM,CAAC,IAAID,EAAM,CAAC,IAAIA,EAAM,CAAC,GAC7BC,EAAM,CAAC,IAAID,EAAM,CAAC,IAAIA,EAAM,CAAC,GAC7BC,EAAM,CAAC,IAAID,EAAM,CAAC,IAAIA,EAAM,CAAC,GAC7BC,EAAM,CAAC,IAAID,EAAM,CAAC,IAAIA,EAAM,CAAC,GAC7BrU,EAAK,IAAIyU,EAAM,IAAIH,EAAM,CAAC,IAAIF,GAAK,CAAC,GACpCpU,EAAK,IAAIyU,EAAM,IAAIH,EAAM,CAAC,IAAIF,GAAK,CAAC,GACpCpU,EAAK,KAAKyU,EAAM,IAAIH,EAAM,CAAC,IAAIF,GAAK,CAAC,GACrCpU,EAAK,KAAKyU,EAAM,IAAIH,EAAM,CAAC,IAAIF,GAAK,CAAC,GACrCpU,EAAK,KAAKyU,EAAM,IAAIH,EAAM,CAAC,IAAIF,GAAK,CAAC,GACrCpU,EAAK,KAAKyU,EAAM,IAAIH,EAAM,CAAC,IAAIF,GAAK,CAAC,GACrCpU,EAAK,KAAKyU,EAAM,IAAIH,EAAM,CAAC,IAAIF,GAAK,CAAC,GACrCpU,EAAK,KAAKyU,EAAM,IAAIH,EAAM,CAAC,IAAIF,GAAK,CAAC;IAEzC;AACA,aAASf,GAAcrT,GAAM;AAC3B,eAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,YAAIzB,IAAIyB,EAAK,CAAC,EAAE,CAAC,GACb0U,IAAK1U,EAAK,CAAC,EAAE,CAAC,GACd2U,IAAK3U,EAAK,CAAC,EAAE,CAAC;AAClBA,UAAK,CAAC,EAAE,CAAC,IAAIzB,IAAI,SAASoW,GAC1B3U,EAAK,CAAC,EAAE,CAAC,IAAIzB,IAAI,SAASmW,IAAK,SAASC,GACxC3U,EAAK,CAAC,EAAE,CAAC,IAAIzB,IAAI,SAASmW;MAC5B;IACF;AACA,aAASpB,GAAcnT,GAAK8T,GAAKW,GAAK;AACpC,eAASxX,IAAI,GAAGA,IAAI,IAAI,EAAEA;AACxB6W,UAAIW,IAAMxX,CAAC,IAAIyX,UAAU,YAAYC,GAAS3U,EAAI/C,CAAC,CAAC,CAAC;IAEzD;AACA,aAAS0X,GAASC,GAAO;AACvB,aAAIA,KAAS,IACJ,KAAK,KAAKA,CAAK,IAAI,KAAK,IAAI,KAAK,IAAIA,CAAK,GAAG,GAAG,IAEhD,KAAK,KAAKA,CAAK,IAAI,KAAK,IAAIxJ,IAAS,KAAK,IAAIwJ,CAAK,IAAI,CAAC;IAEnE;AACA,aAASC,GAAcC,GAAM;AAC3B,aAAO,IAAI,SAASA,EAAK,MAAM,QAAQA,EAAK,OAAO,OAAOA,EAAK,IAAI;IACrE;AACA,aAASC,GAAcD,GAAM;AAC3B,UAAIE,IAAaF,EAAK,OAAO,OAAO,MAAMA,EAAK,OAAO,OAAOA,EAAK,OAAO,QAAQA,EAAK,IAAI,GACtFG,IAAY,IAAI,WAAW5D,GAAgB2D,CAAU,CAAC,GACtDE,IAAY,IAAI,WAAWD,EAAU,MAAM;AAC/C,aAAAjE,GAAUiE,CAAS,GACnBhE,GAAiBgE,GAAWC,CAAS,GAC9B,IAAI,SAASA,EAAU,MAAM;IACtC;AACA,aAASC,GAAcL,GAAM;AAC3B,UAAIE,IAAaF,EAAK,MAAM,MAAMA,EAAK,OAAO,OAAOA,EAAK,OAAO,QAAQA,EAAK,IAAI,GAC9EG,IAAYnK,GAAWkK,CAAU,GACjCE,IAAY,IAAI,WAAWD,EAAU,MAAM;AAC/C,aAAAjE,GAAUiE,CAAS,GACnBhE,GAAiBgE,GAAWC,CAAS,GAC9B,IAAI,SAASA,EAAU,MAAM;IACtC;AACA,aAASE,GAAcN,GAAM;AAO3B,eANIxI,IAAawI,EAAK,QAClB/I,IAAW,EAAE,OAAO+I,EAAK,OAAO,MAAK,GACrCtH,IAAY,IAAI,YAAYsH,EAAK,QAAQA,EAAK,qBAAqBA,EAAK,WAAWA,EAAK,KAAK,GAC7FxJ,IAAS,IAAI,WAAW,IAAW,GACnC+J,IAAe,GACfC,IAAiB,IAAI,MAAMR,EAAK,QAAQ,GACnC7X,IAAI,GAAGA,IAAI6X,EAAK,UAAU7X;AACjCqY,UAAerY,CAAC,IAAI,CAAA,GACpBqY,EAAerY,CAAC,EAAE,QAAWoY,GAC7BC,EAAerY,CAAC,EAAE,MAASqY,EAAerY,CAAC,EAAE,OAC7CqY,EAAerY,CAAC,EAAE,KAAQ6X,EAAK,OAC/BQ,EAAerY,CAAC,EAAE,KAAQ6X,EAAK,OAC/BQ,EAAerY,CAAC,EAAE,OAAU6X,EAAK,MACjCO,KAAgBC,EAAerY,CAAC,EAAE,KAAKqY,EAAerY,CAAC,EAAE,KAAKqY,EAAerY,CAAC,EAAE;AAElF,UAAIsY,KAAaC,GAAYlJ,GAAYP,CAAQ,GAC7C0J,KAAaD,GAAYlJ,GAAYP,CAAQ;AACjD,UAAI0J,MAAc;AAChB,cAAM;AAER,UAAIF,MAAcE;AAChB,iBAASxY,IAAI,GAAGA,IAAIwY,KAAaF,KAAa,GAAGtY;AAC/CqO,YAAOrO,IAAIsY,EAAU,IAAIG,GAAWpJ,GAAYP,CAAQ;AAG5D,UAAIR,IAAM,IAAI,YAAY,KAAY,GAClCoK,IAAWtK,GAAqBC,GAAQC,CAAG,GAC3C1N,IAAS+S,GAAYtE,GAAYP,CAAQ;AAC7CyE,SAAcsE,EAAK,OAAOxI,GAAYP,GAAUlO,GAAQ2P,GAAW6H,CAAY;AAC/E,eAASpY,IAAI,GAAGA,IAAI6X,EAAK,UAAU,EAAE7X;AAEnC,iBADImK,IAAKkO,EAAerY,CAAC,GAChB4J,KAAI,GAAGA,KAAIyO,EAAerY,CAAC,EAAE,MAAM,EAAE4J;AAC5C6H,aAAWlB,GAAWpG,EAAG,QAAQP,IAAGO,EAAG,IAAIA,EAAG,MAAMA,EAAG,IAAIA,EAAG,KAAKA,EAAG,MAAMuO,CAAQ;AAGxF7E,SAASvF,GAAKiC,GAAW6H,CAAY;AAGrC,eAFIO,KAAa,GACbV,IAAY,IAAI,WAAW1H,EAAU,OAAO,UAAU,GACjDpP,IAAI,GAAGA,IAAI0W,EAAK,OAAO1W;AAC9B,iBAAS8L,IAAI,GAAGA,IAAI4K,EAAK,UAAU5K,KAAK;AACtC,cAAI9C,IAAKkO,EAAepL,CAAC,GACrB3I,KAAI6F,EAAG,KAAKA,EAAG,MACfyO,KAAK,IAAI,WAAWrI,EAAU,QAAQpG,EAAG,MAAM,GAAY7F,KAAI,CAAU;AAC7E2T,YAAU,IAAIW,IAAID,EAAU,GAC5BA,MAAcrU,KAAI,GAClB6F,EAAG,OAAO7F;QACZ;AAEF,aAAO,IAAI,SAAS2T,EAAU,MAAM;IACtC;AACA,aAASY,GAAchB,GAAM;AAC3B,UAAIE,IAAaF,EAAK,MAAM,MAAMA,EAAK,OAAO,OAAOA,EAAK,OAAO,QAAQA,EAAK,IAAI,GAC9EG,IAAYnK,GAAWkK,CAAU;AACrC,YAAMe,IAAKjB,EAAK,QAAQA,EAAK,WAAWA,EAAK,OACvCI,IAAYJ,EAAK,QAAQ,IAAI,IAAI,YAAYiB,CAAE,IAAI,IAAI,YAAYA,CAAE;AAC3E,UAAIC,IAAe,GACfC,IAAW;AACf,YAAMC,IAAM,IAAI,MAAM,CAAC;AACvB,eAAS9X,KAAI,GAAGA,KAAI0W,EAAK,OAAO1W;AAC9B,iBAAS8L,KAAI,GAAGA,KAAI4K,EAAK,UAAU5K,MAAK;AACtC,cAAIiM,IAAQ;AACZ,kBAAQrB,EAAK,MAAI;YACf,KAAK;AACHoB,gBAAI,CAAC,IAAIF,GACTE,EAAI,CAAC,IAAIA,EAAI,CAAC,IAAIpB,EAAK,OACvBkB,IAAeE,EAAI,CAAC,IAAIpB,EAAK;AAC7B,uBAASjO,IAAI,GAAGA,IAAIiO,EAAK,OAAO,EAAEjO,GAAG;AACnC,sBAAM5B,IAAOgQ,EAAUiB,EAAI,CAAC,GAAG,KAAK,IAAIjB,EAAUiB,EAAI,CAAC,GAAG;AAC1DC,qBAASlR,GACTiQ,EAAUe,CAAQ,IAAIE,GACtBF;cACF;AACA;YACF,KAAK;AACHC,gBAAI,CAAC,IAAIF,GACTE,EAAI,CAAC,IAAIA,EAAI,CAAC,IAAIpB,EAAK,OACvBoB,EAAI,CAAC,IAAIA,EAAI,CAAC,IAAIpB,EAAK,OACvBkB,IAAeE,EAAI,CAAC,IAAIpB,EAAK;AAC7B,uBAASjO,IAAI,GAAGA,IAAIiO,EAAK,OAAO,EAAEjO,GAAG;AACnC,sBAAM5B,IAAOgQ,EAAUiB,EAAI,CAAC,GAAG,KAAK,KAAKjB,EAAUiB,EAAI,CAAC,GAAG,KAAK,KAAKjB,EAAUiB,EAAI,CAAC,GAAG,KAAK;AAC5FC,qBAASlR,GACTiQ,EAAUe,CAAQ,IAAIE,GACtBF;cACF;AACA;UACd;QACQ;AAEF,aAAO,IAAI,SAASf,EAAU,MAAM;IACtC;AACA,aAASkB,GAActB,GAAM;AAC3B,UAAIxI,IAAawI,EAAK,QAClB/I,IAAW,EAAE,OAAO+I,EAAK,OAAO,MAAK,GACrCtH,IAAY,IAAI,WAAWsH,EAAK,QAAQA,EAAK,SAASA,EAAK,WAAWA,EAAK,OAAO,EAAW,GAC7FuB,IAAY;QACd,SAASC,GAAWhK,GAAYP,CAAQ;QACxC,yBAAyBuK,GAAWhK,GAAYP,CAAQ;QACxD,uBAAuBuK,GAAWhK,GAAYP,CAAQ;QACtD,kBAAkBuK,GAAWhK,GAAYP,CAAQ;QACjD,kBAAkBuK,GAAWhK,GAAYP,CAAQ;QACjD,mBAAmBuK,GAAWhK,GAAYP,CAAQ;QAClD,qBAAqBuK,GAAWhK,GAAYP,CAAQ;QACpD,YAAYuK,GAAWhK,GAAYP,CAAQ;QAC3C,0BAA0BuK,GAAWhK,GAAYP,CAAQ;QACzD,0BAA0BuK,GAAWhK,GAAYP,CAAQ;QACzD,eAAeuK,GAAWhK,GAAYP,CAAQ;MACtD;AACM,UAAIsK,EAAU,UAAU;AACtB,cAAM,sBAAsBE,GAAU,cAAc,cAAcF,EAAU,UAAU;AAIxF,eAFIG,IAAe,IAAI,MAAK,GACxBC,IAAWjB,GAAYlJ,GAAYP,CAAQ,IAAI,GAC5C0K,IAAW,KAAG;AACnB,YAAI5jB,IAAO6jB,GAA0BpK,EAAW,QAAQP,CAAQ,GAC5Dha,KAAQ2jB,GAAWpJ,GAAYP,CAAQ,GACvC4K,KAAc5kB,MAAS,IAAI,GAC3B6kB,KAAO7kB,MAAS,KAAK,GACrBI,IAAQ,IAAI,UAAU,CAACykB,CAAG,CAAC,EAAE,CAAC,GAC9BrU,IAAOmT,GAAWpJ,GAAYP,CAAQ;AAC1CyK,UAAa,KAAK;UAChB,MAAA3jB;UACA,OAAAV;UACA,MAAAoQ;UACA,aAAAoU;QACV,CAAS,GACDF,KAAY5jB,EAAK,SAAS;MAC5B;AAGA,eAFIgkB,IAAWN,GAAU,UACrB5E,KAAc,IAAI,MAAMmD,EAAK,QAAQ,GAChC7X,KAAI,GAAGA,KAAI6X,EAAK,UAAU,EAAE7X,IAAG;AACtC,YAAImK,IAAKuK,GAAY1U,EAAC,IAAI,CAAA,GACtB6Z,IAAUD,EAAS5Z,EAAC;AACxBmK,UAAG,OAAO0P,EAAQ,MAClB1P,EAAG,cAAc,GACjBA,EAAG,UAAU,OACbA,EAAG,OAAO0P,EAAQ,WAClB1P,EAAG,UAAU0P,EAAQ,SACrB1P,EAAG,QAAQ0N,EAAK,OAChB1N,EAAG,SAAS0N,EAAK;MACnB;AAIA,eAHIrD,IAAS;QACX,KAAK,IAAI,MAAM,CAAC;MACxB,GACe2B,KAAU,GAAGA,KAAU0B,EAAK,UAAU,EAAE1B;AAE/C,iBADIhM,IAAKuK,GAAYyB,EAAO,GACnBnW,KAAI,GAAGA,KAAIuZ,EAAa,QAAQ,EAAEvZ,IAAG;AAC5C,cAAI8Z,KAAOP,EAAavZ,EAAC;AACrBmK,YAAG,QAAQ2P,GAAK,SAClB3P,EAAG,cAAc2P,GAAK,aAClBA,GAAK,SAAS,MAChBtF,EAAO,IAAIsF,GAAK,KAAK,IAAI3D,KAE3BhM,EAAG,SAASgM;QAEhB;AAEF,UAAIiD,EAAU,mBAAmB;AAC/B,gBAAQA,EAAU,eAAa;UAC7B,KAAK;AACH,gBAAIzE,KAAW,IAAI,YAAYyE,EAAU,wBAAwB;AACjE7F;cACEsE,EAAK;cACLxI;cACAP;cACAsK,EAAU;cACVzE;cACAyE,EAAU;YACxB;AACY;UACF,KAAK;AACH,gBAAIrB,KAAaF,EAAK,MAAM,MAAM/I,EAAS,OAAOA,EAAS,QAAQsK,EAAU,wBAAwB,GACjGxW,KAAOiL,GAAWkK,EAAU,GAC5BpD,KAAW,IAAI,YAAY/R,GAAK,MAAM;AAC1CkM,cAAS,SAASsK,EAAU;AAC5B;QACZ;AAEM,UAAIA,EAAU,mBAAmB,GAAG;AAClC,YAAIW,IAAW;UACb,OAAOlC,EAAK;UACZ,QAAQ/I;UACR,MAAMsK,EAAU;QAC1B,GACYxE,KAAW,IAAI,YAAYsD,GAAc6B,CAAQ,EAAE,MAAM;AAC7DjL,UAAS,SAASsK,EAAU;MAC9B;AACA,UAAIA,EAAU,aAAa,GAAG;AAC5B,YAAIrB,KAAaF,EAAK,MAAM,MAAM/I,EAAS,OAAOA,EAAS,QAAQsK,EAAU,iBAAiB,GAC1FxW,KAAOiL,GAAWkK,EAAU,GAC5BiC,KAAY5F,GAAgBxR,GAAK,MAAM;AAC3CkM,UAAS,SAASsK,EAAU;MAC9B;AAGA,eAFIhB,KAAe,GACf5C,KAAa,IAAI,MAAMd,GAAY,MAAM,GACpC1U,KAAI,GAAGA,KAAIwV,GAAW,QAAQ,EAAExV;AACvCwV,QAAAA,GAAWxV,EAAC,IAAI,IAAI,MAAK;AAE3B,eAASmB,IAAI,GAAGA,IAAI0W,EAAK,OAAO,EAAE1W;AAChC,iBAAS8Y,IAAO,GAAGA,IAAOvF,GAAY,QAAQ,EAAEuF;AAC9CzE,UAAAA,GAAWyE,CAAI,EAAE,KAAK7B,EAAY,GAClCA,MAAgB1D,GAAYuF,CAAI,EAAE,QAAQpC,EAAK,OAAO;AAG1DtD,SAAeC,GAAQgB,IAAYd,IAAaC,IAAUC,IAAUrE,CAAS;AAC7E,eAASvQ,KAAI,GAAGA,KAAI0U,GAAY,QAAQ,EAAE1U,IAAG;AAC3C,YAAImK,IAAKuK,GAAY1U,EAAC;AACtB,YAAI,CAAAmK,EAAG;AAEP,kBAAQA,EAAG,aAAW;YACpB,KAAK;AAGH,uBAFIgN,IAAM,GACN+C,KAAY,GACP/Y,IAAI,GAAGA,IAAI0W,EAAK,OAAO,EAAE1W,GAAG;AAEnC,yBADIgZ,KAAiB3E,GAAWxV,EAAC,EAAEmX,CAAG,GAC7BjW,KAAI,GAAGA,KAAIiJ,EAAG,OAAO,EAAEjJ,IAAG;AACjC,2BAASkZ,KAAO,GAAGA,KAAO,IAAajQ,EAAG,MAAM,EAAEiQ;AAChD7J,sBAAU4J,IAAgB,IAAIH,GAAUE,KAAYE,KAAOjQ,EAAG,QAAQA,EAAG,MAAM;AAEjF+P;gBACF;AACA/C;cACF;AACA;YACF,KAAK;YACL;AACE,oBAAM;UAClB;MACM;AACA,aAAO,IAAI,SAAS5G,EAAU,MAAM;IACtC;AACA,aAASkJ,GAA0B/H,GAASyE,GAAS;AAGnD,eAFIkE,IAAa,IAAI,WAAW3I,CAAO,GACnC4I,IAAY,GACTD,EAAWlE,EAAQ,QAAQmE,CAAS,KAAK;AAC9CA,aAAa;AAEf,UAAIC,IAAc,IAAI,YAAW,EAAG,OAAOF,EAAW,MAAMlE,EAAQ,OAAOA,EAAQ,QAAQmE,CAAS,CAAC;AACrG,aAAAnE,EAAQ,QAAQA,EAAQ,QAAQmE,IAAY,GACrCC;IACT;AACA,aAASC,GAAuB9I,GAASyE,GAAS9B,GAAM;AACtD,UAAIkG,IAAc,IAAI,YAAW,EAAG,OAAO,IAAI,WAAW7I,CAAO,EAAE,MAAMyE,EAAQ,OAAOA,EAAQ,QAAQ9B,CAAI,CAAC;AAC7G,aAAA8B,EAAQ,QAAQA,EAAQ,QAAQ9B,GACzBkG;IACT;AACA,aAASE,GAAc1V,GAAUoR,GAAS;AACxC,UAAIjV,IAAIwZ,GAAW3V,GAAUoR,CAAO,GAChChV,IAAIwS,GAAY5O,GAAUoR,CAAO;AACrC,aAAO,CAACjV,GAAGC,CAAC;IACd;AACA,aAASwZ,GAAc5V,GAAUoR,GAAS;AACxC,UAAIjV,IAAIyS,GAAY5O,GAAUoR,CAAO,GACjChV,IAAIwS,GAAY5O,GAAUoR,CAAO;AACrC,aAAO,CAACjV,GAAGC,CAAC;IACd;AACA,aAASuZ,GAAW3V,GAAUoR,GAAS;AACrC,UAAIyE,IAAQ7V,EAAS,SAASoR,EAAQ,OAAO,IAAI;AACjD,aAAAA,EAAQ,QAAQA,EAAQ,QAAQ,GACzByE;IACT;AACA,aAASjH,GAAY5O,GAAUoR,GAAS;AACtC,UAAI0E,IAAS9V,EAAS,UAAUoR,EAAQ,OAAO,IAAI;AACnD,aAAAA,EAAQ,QAAQA,EAAQ,QAAQ,GACzB0E;IACT;AACA,aAAS9L,GAAgBF,GAAasH,GAAS;AAC7C,UAAI2E,IAAQjM,EAAYsH,EAAQ,KAAK;AACrC,aAAAA,EAAQ,QAAQA,EAAQ,QAAQ,GACzB2E;IACT;AACA,aAASrC,GAAW1T,GAAUoR,GAAS;AACrC,UAAI2E,IAAQ/V,EAAS,SAASoR,EAAQ,KAAK;AAC3C,aAAAA,EAAQ,QAAQA,EAAQ,QAAQ,GACzB2E;IACT;AACA,UAAMzB,KAAa,SAAStU,GAAUoR,GAAS;AAC7C,UAAI4E;AACJ,aAAI,iBAAiB,SAAS,YAC5BA,IAAM,OAAOhW,EAAS,YAAYoR,EAAQ,OAAO,IAAI,CAAC,IAEtD4E,IAAMhW,EAAS,UAAUoR,EAAQ,QAAQ,GAAG,IAAI,IAAI,OAAOpR,EAAS,UAAUoR,EAAQ,OAAO,IAAI,KAAK,EAAE,GAE1GA,EAAQ,SAAS,GACV4E;IACT;AACA,aAASC,EAAajW,GAAUoR,GAAS;AACvC,UAAIwB,IAAQ5S,EAAS,WAAWoR,EAAQ,OAAO,IAAI;AACnD,aAAAA,EAAQ,SAAS,GACVwB;IACT;AACA,aAASsD,GAAclW,GAAUoR,GAAS;AACxC,aAAOsB,UAAU,YAAYuD,EAAajW,GAAUoR,CAAO,CAAC;IAC9D;AACA,aAASO,EAAcwE,GAAQ;AAC7B,UAAIC,KAAYD,IAAS,UAAU,IAAIE,IAAWF,IAAS;AAC3D,cAAQA,KAAU,KAAK,KAAK,MAAMC,IAAWA,MAAa,KAAKC,IAAW,MAAM,IAAA,IAAW,KAAK,IAAI,GAAGD,IAAW,EAAE,KAAK,IAAIC,IAAW,QAAQ,kBAAkBA,IAAW;IAC/K;AACA,aAAS7C,GAAYxT,GAAUoR,GAAS;AACtC,UAAIkF,IAAStW,EAAS,UAAUoR,EAAQ,OAAO,IAAI;AACnD,aAAAA,EAAQ,SAAS,GACVkF;IACT;AACA,aAASC,GAAa5J,GAASyE,GAAS;AACtC,aAAOO,EAAc6B,GAAY7G,GAASyE,CAAO,CAAC;IACpD;AACA,aAASoF,GAAYxW,GAAU2M,GAASyE,GAAS9B,GAAM;AAGrD,eAFImH,IAAcrF,EAAQ,OACtByD,IAAW,CAAA,GACRzD,EAAQ,QAAQqF,IAAcnH,IAAO,KAAG;AAC7C,YAAIze,IAAO6jB,GAA0B/H,GAASyE,CAAO,GACjDsF,IAAYf,GAAW3V,GAAUoR,CAAO,GACxCuF,KAAUjD,GAAW1T,GAAUoR,CAAO;AAC1CA,UAAQ,SAAS;AACjB,YAAIwF,KAAYjB,GAAW3V,GAAUoR,CAAO,GACxCyF,IAAYlB,GAAW3V,GAAUoR,CAAO;AAC5CyD,UAAS,KAAK;UACZ,MAAAhkB;UACA,WAAA6lB;UACA,SAAAC;UACA,WAAAC;UACA,WAAAC;QACV,CAAS;MACH;AACA,aAAAzF,EAAQ,SAAS,GACVyD;IACT;AACA,aAASiC,GAAoB9W,GAAUoR,GAAS;AAC9C,UAAI2F,IAAOd,EAAajW,GAAUoR,CAAO,GACrC4F,IAAOf,EAAajW,GAAUoR,CAAO,GACrC6F,IAAShB,EAAajW,GAAUoR,CAAO,GACvC8F,IAASjB,EAAajW,GAAUoR,CAAO,GACvC+F,IAAQlB,EAAajW,GAAUoR,CAAO,GACtCgG,IAAQnB,EAAajW,GAAUoR,CAAO,GACtCiG,KAASpB,EAAajW,GAAUoR,CAAO,GACvCkG,KAASrB,EAAajW,GAAUoR,CAAO;AAC3C,aAAO;QACL,MAAA2F;QACA,MAAAC;QACA,QAAAC;QACA,QAAAC;QACA,OAAAC;QACA,OAAAC;QACA,QAAAC;QACA,QAAAC;MACR;IACI;AACA,aAASC,GAAiBvX,GAAUoR,GAAS;AAC3C,UAAIoG,IAAmB;QACrB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACR,GACU7C,IAAcjB,GAAW1T,GAAUoR,CAAO;AAC9C,aAAOoG,EAAiB7C,CAAW;IACrC;AACA,aAAS8C,GAAWzX,GAAUoR,GAAS;AACrC,UAAIsG,IAAO9I,GAAY5O,GAAUoR,CAAO,GACpCuG,IAAO/I,GAAY5O,GAAUoR,CAAO,GACpCwG,IAAOhJ,GAAY5O,GAAUoR,CAAO,GACpCyG,IAAOjJ,GAAY5O,GAAUoR,CAAO;AACxC,aAAO,EAAE,MAAAsG,GAAM,MAAAC,GAAM,MAAAC,GAAM,MAAAC,EAAI;IACjC;AACA,aAASC,GAAe9X,GAAUoR,GAAS;AACzC,UAAI2G,IAAa,CAAC,cAAc,GAC5BC,IAAYtE,GAAW1T,GAAUoR,CAAO;AAC5C,aAAO2G,EAAWC,CAAS;IAC7B;AACA,aAASC,GAASjY,GAAUoR,GAAS;AACnC,UAAIjV,IAAI8Z,EAAajW,GAAUoR,CAAO,GAClChV,IAAI6Z,EAAajW,GAAUoR,CAAO;AACtC,aAAO,CAACjV,GAAGC,CAAC;IACd;AACA,aAAS8b,GAASlY,GAAUoR,GAAS;AACnC,UAAIjV,IAAI8Z,EAAajW,GAAUoR,CAAO,GAClChV,IAAI6Z,EAAajW,GAAUoR,CAAO,GAClC+G,IAAIlC,EAAajW,GAAUoR,CAAO;AACtC,aAAO,CAACjV,GAAGC,GAAG+b,CAAC;IACjB;AACA,aAASC,GAAWpY,GAAU2M,GAASyE,GAAS7Q,GAAM+O,GAAM;AAC1D,UAAI/O,MAAS,YAAYA,MAAS,kBAAkBA,MAAS;AAC3D,eAAOkV,GAAuB9I,GAASyE,GAAS9B,CAAI;AAC/C,UAAI/O,MAAS;AAClB,eAAOiW,GAAYxW,GAAU2M,GAASyE,GAAS9B,CAAI;AAC9C,UAAI/O,MAAS;AAClB,eAAOuW,GAAoB9W,GAAUoR,CAAO;AACvC,UAAI7Q,MAAS;AAClB,eAAOgX,GAAiBvX,GAAUoR,CAAO;AACpC,UAAI7Q,MAAS;AAClB,eAAOkX,GAAWzX,GAAUoR,CAAO;AAC9B,UAAI7Q,MAAS;AAClB,eAAOuX,GAAe9X,GAAUoR,CAAO;AAClC,UAAI7Q,MAAS;AAClB,eAAO0V,EAAajW,GAAUoR,CAAO;AAChC,UAAI7Q,MAAS;AAClB,eAAO0X,GAASjY,GAAUoR,CAAO;AAC5B,UAAI7Q,MAAS;AAClB,eAAO2X,GAASlY,GAAUoR,CAAO;AAC5B,UAAI7Q,MAAS;AAClB,eAAOoV,GAAW3V,GAAUoR,CAAO;AAC9B,UAAI7Q,MAAS;AAClB,eAAOmV,GAAc1V,GAAUoR,CAAO;AACjC,UAAI7Q,MAAS;AAClB,eAAOqV,GAAc5V,GAAUoR,CAAO;AACjC,UAAI7Q,MAAS;AAClB,eAAA6Q,EAAQ,SAAS9B,GACV;AAEP8B,QAAQ,SAAS9B;IAGrB;AACA,aAAS+I,GAAYrY,GAAU2M,GAASyE,GAAS;AAC/C,YAAMkH,IAAa,CAAA;AACnB,UAAItY,EAAS,UAAU,GAAG,IAAI,KAAK;AACjC,cAAM;AAERsY,QAAW,UAAUtY,EAAS,SAAS,CAAC;AACxC,YAAMuY,IAAOvY,EAAS,SAAS,CAAC;AAChCsY,QAAW,OAAO;QAChB,YAAY,CAAC,EAAEC,IAAO;QACtB,UAAU,CAAC,EAAEA,IAAO;QACpB,YAAY,CAAC,EAAEA,IAAO;QACtB,WAAW,CAAC,EAAEA,IAAO;MAC7B,GACMnH,EAAQ,QAAQ;AAEhB,eADIoH,IAAc,MACXA,KAAa;AAClB,YAAIC,IAAgB/D,GAA0B/H,GAASyE,CAAO;AAC9D,YAAIqH,KAAiB;AACnBD,cAAc;aACT;AACL,cAAIE,IAAgBhE,GAA0B/H,GAASyE,CAAO,GAC1DuH,KAAgB/J,GAAY5O,GAAUoR,CAAO,GAC7CwH,KAAiBR,GAAWpY,GAAU2M,GAASyE,GAASsH,GAAeC,EAAa;AACpFC,UAAAA,OAAmB,SACrB,QAAQ,KAAK,2DAA2DF,CAAa,IAAI,IAEzFJ,EAAWG,CAAa,IAAIG;QAEhC;MACF;AACA,WAAKL,IAAO,OAAO;AACjB,cAAA,QAAQ,MAAM,cAAcD,CAAU,GAChC;AAER,aAAOA;IACT;AACA,aAASO,GAAaP,GAAYtY,GAAU8J,GAAasH,GAAS0H,GAAY;AAC5E,YAAMC,IAAc;QAClB,MAAM;QACN,QAAQ/Y;QACR,OAAO8J;QACP,QAAQsH;QACR,OAAOkH,EAAW,WAAW,OAAOA,EAAW,WAAW,OAAO;QACjE,QAAQA,EAAW,WAAW,OAAOA,EAAW,WAAW,OAAO;QAClE,UAAUA,EAAW,SAAS;QAC9B,cAAc;QACd,OAAO;QACP,WAAW;QACX,MAAMA,EAAW,SAAS,CAAC,EAAE;QAC7B,YAAY;QACZ,QAAQ;QACR,QAAQ;QACR,CAACpP,KAAgB,eAAe,UAAU,GAAG;MACrD;AACM,cAAQoP,EAAW,aAAW;QAC5B,KAAK;AACHS,YAAY,QAAQ,GACpBA,EAAY,aAAalG;AACzB;QACF,KAAK;AACHkG,YAAY,QAAQ,GACpBA,EAAY,aAAahG;AACzB;QACF,KAAK;AACHgG,YAAY,QAAQ,GACpBA,EAAY,aAAa5F;AACzB;QACF,KAAK;AACH4F,YAAY,QAAQ,IACpBA,EAAY,aAAa5F;AACzB;QACF,KAAK;AACH4F,YAAY,QAAQ,IACpBA,EAAY,aAAa3F;AACzB;QACF,KAAK;AACH2F,YAAY,QAAQ,IACpBA,EAAY,aAAajF;AACzB;QACF,KAAK;AACHiF,YAAY,QAAQ,IACpBA,EAAY,aAAa3E;AACzB;QACF,KAAK;AACH2E,YAAY,QAAQ,KACpBA,EAAY,aAAa3E;AACzB;QACF;AACE,gBAAM,sBAAsBkE,EAAW,cAAc;MAC/D;AAEM,UADAS,EAAY,oBAAoBA,EAAY,OACxCA,EAAY,QAAQ;AACtB,gBAAQD,GAAU;UAChB,KAAK/X;AACHgY,cAAY,SAASxC,IACrBwC,EAAY,YAAY;AACxB;UACF,KAAKjY;AACHiY,cAAY,SAASvF,IACrBuF,EAAY,YAAY;AACxB;QACZ;eACiBA,EAAY,QAAQ;AAC7B,gBAAQD,GAAU;UAChB,KAAK/X;AACHgY,cAAY,SAAS9C,GACrB8C,EAAY,YAAY;AACxB;UACF,KAAKjY;AACHiY,cAAY,SAAS7C,IACrB6C,EAAY,YAAY;QACpC;;AAEQ,cAAM,4CAA4CA,EAAY,OAAO,UAAUT,EAAW,cAAc;AAE1GS,QAAY,cAAcT,EAAW,WAAW,OAAO,KAAKS,EAAY;AACxE,eAAS9d,IAAI,GAAGA,IAAI8d,EAAY,YAAY9d;AAC1CqZ,WAAWtU,GAAUoR,CAAO;AAC9B2H,QAAY,iBAAiBA,EAAY,YAAY,IAAI,IAAIA,EAAY;AACzE,YAAMzJ,IAAOyJ,EAAY,QAAQA,EAAY,SAASA,EAAY;AAClE,cAAQD,GAAU;QAChB,KAAK/X;AACHgY,YAAY,YAAY,IAAI,aAAazJ,CAAI,GACzCyJ,EAAY,WAAWA,EAAY,kBACrCA,EAAY,UAAU,KAAK,GAAG,GAAGzJ,CAAI;AACvC;QACF,KAAKxO;AACHiY,YAAY,YAAY,IAAI,YAAYzJ,CAAI,GACxCyJ,EAAY,WAAWA,EAAY,kBACrCA,EAAY,UAAU,KAAK,OAAO,GAAGzJ,CAAI;AAC3C;QACF;AACE,kBAAQ,MAAM,uCAAuCwJ,CAAU;AAC/D;MACV;AACM,aAAAC,EAAY,eAAeA,EAAY,QAAQA,EAAY,YAAYA,EAAY,UAC/EA,EAAY,kBAAkB,IAChCA,EAAY,SAAS5X,aAErB4X,EAAY,SAASC,WACnB9P,KACF6P,EAAY,aAAa,gBAEzBA,EAAY,WAAW,KAClBA;IACT;AACA,UAAME,KAAiB,IAAI,SAASzoB,CAAM,GACpC0oB,KAAa,IAAI,WAAW1oB,CAAM,GAClC2oB,KAAS,EAAE,OAAO,EAAC,GACnB5E,KAAY8D,GAAYY,IAAgBzoB,GAAQ2oB,EAAM,GACtDC,KAAaP,GAAatE,IAAW0E,IAAgBC,IAAYC,IAAQ,KAAK,IAAI,GAClFE,KAAY,EAAE,OAAO,EAAC,GACtBC,KAAiB,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAC;AACrD,aAASC,IAAmB,GAAGA,IAAmBH,GAAW,SAASA,GAAW,mBAAmBG,KAAoB;AACtH,YAAMC,IAAO5K,GAAYqK,IAAgBE,EAAM;AAC/CC,MAAAA,GAAW,OAAOxK,GAAYqK,IAAgBE,EAAM,GACpDC,GAAW,QAAQI,IAAOJ,GAAW,oBAAoBA,GAAW,SAASA,GAAW,SAASI,IAAOJ,GAAW;AAEnH,YAAMK,IADeL,GAAW,OAAOA,GAAW,QAAQA,GAAW,eACvCA,GAAW,WAAWA,EAAU,IAAIvG,GAAcuG,EAAU;AAC1FD,SAAO,SAASC,GAAW;AAC3B,eAASM,IAAS,GAAGA,IAASN,GAAW,mBAAmBM,KAAU;AACpE,cAAMC,IAASD,IAASH,IAAmBH,GAAW;AACtD,YAAIO,KAAUP,GAAW;AACvB;AACF,iBAASQ,IAAY,GAAGA,IAAYR,GAAW,UAAUQ,KAAa;AACpE,gBAAMC,IAAOP,GAAe/E,GAAU,SAASqF,CAAS,EAAE,IAAI;AAC9D,mBAASzd,KAAI,GAAGA,KAAIid,GAAW,OAAOjd,MAAK;AACzCkd,eAAU,SAASK,KAAUN,GAAW,WAAWA,GAAW,SAASQ,IAAYR,GAAW,QAAQjd,MAAKid,GAAW;AACtH,kBAAMU,MAAYV,GAAW,SAAS,IAAIO,MAAWP,GAAW,QAAQA,GAAW,kBAAkBjd,KAAIid,GAAW,iBAAiBS;AACrIT,YAAAA,GAAW,UAAUU,EAAQ,IAAIV,GAAW,OAAOK,GAAQJ,EAAS;UACtE;QACF;MACF;IACF;AACA,WAAO;MACL,QAAQ9E;MACR,OAAO6E,GAAW;MAClB,QAAQA,GAAW;MACnB,MAAMA,GAAW;MACjB,QAAQA,GAAW;MACnB,CAAClQ,KAAgB,eAAe,UAAU,GAAGkQ,GAAWlQ,KAAgB,eAAe,UAAU;MACjG,MAAM,KAAK;IACjB;EACE;EACA,YAAYnZ,GAAO;AACjB,WAAA,KAAK,OAAOA,GACL;EACT;EACA,KAAKV,GAAKC,GAAQC,GAAYC,GAAS;AACrC,aAASuqB,EAAe1Y,GAAS2Y,GAAS;AACpC9Q,WACF7H,EAAQ,aAAa2Y,EAAQ,aAE7B3Y,EAAQ,WAAW2Y,EAAQ,UAC7B3Y,EAAQ,YAAYD,cACpBC,EAAQ,YAAYD,cACpBC,EAAQ,kBAAkB,OAC1BA,EAAQ,QAAQ,OACZ/R,KACFA,EAAO+R,GAAS2Y,CAAO;IAC3B;AACA,WAAO,MAAM,KAAK3qB,GAAK0qB,GAAgBxqB,GAAYC,CAAO;EAC5D;AACF;ACh0CO,IAAMyqB,KAAN,cAAiC7qB,OAAsB;EAG5D,YACE8R,IAAqC,CAAA,GACrCb,GACA;AACA,UAAMA,CAAO,GACb,KAAK,UAAUa;EACjB;EAES,KACP7R,GACAC,GACAC,GACAC,GACe;AACf,UAAM,EAAE,OAAA8R,GAAO,QAAAC,GAAQ,OAAAC,EAAA,IAAU,KAAK,SAChCH,IAAU,IAAI6Y,cAAc,MAAM5Y,GAAOC,GAAQC,CAAK,GAEtD/R,IAAS,IAAI0Z,GAAU,KAAK,OAAO;AACzC,WAAA1Z,EAAO,iBAAiB,KAAK,aAAa,GAC1CA,EAAO,QAAQ,KAAK,IAAI,GACxBA,EAAO,mBAAmB,KAAK,eAAe,GAC9CA,EAAO;MACLJ;MACA,CAAA8qB,MAAO;AACL,cAAM,EAAE,OAAAC,GAAAA,IAAUD;AAClB9Y,UAAQ,QAAQ;UACd,MAAM+Y,GAAM;UACZ,OAAO9Y,KAAS8Y,GAAM;UACtB,QAAQ7Y,KAAU6Y,GAAM;UACxB,OAAO5Y,KAAS,KAAK,KAAK4Y,GAAM,MAAM;QAAA,GAExC/Y,EAAQ,OAAO8Y,EAAI,MACnB9Y,EAAQ,SAAS8Y,EAAI,QACrB9Y,EAAQ,aAAa8Y,EAAI,YACzB9Y,EAAQ,cAAc;AAEtB,YAAI;AACF/R,eAAA,QAAAA,EAAS+R,CAAAA;QACX,SAASxR,IAAO;AACVL,eAAW,OACbA,EAAQK,EAAK,IAEb,QAAQ,MAAMA,EAAK,GAErB,KAAK,QAAQ,UAAUR,CAAG;QAC5B;MACF;MACAE;MACAC;IAAA,GAGK6R;EACT;AACF;ACzDO,IAAMgZ,KAAN,cAA+BjrB,OAAoB;EAGxD,YAAY8R,IAAmC,CAAA,GAAIb,GAA0B;AAC3E,UAAMA,CAAO,GACb,KAAK,UAAUa;EACjB;EAES,KACP7R,GACAC,GACAC,GACAC,GACa;AACb,UAAM,EAAE,OAAA8R,GAAO,QAAAC,EAAA,IAAW,KAAK,SACzBF,IAAU,IAAIiZ,YAAY,MAAMhZ,GAAOC,CAAM,GAE7C9R,IAAS,IAAI0Z,GAAU,KAAK,OAAO;AACzC,WAAA1Z,EAAO,iBAAiB,KAAK,aAAa,GAC1CA,EAAO,QAAQ,KAAK,IAAI,GACxBA,EAAO,mBAAmB,KAAK,eAAe,GAC9CA,EAAO;MACLJ;MACA,CAAA8qB,MAAO;AACL,cAAM,EAAE,OAAAC,EAAAA,IAAUD;AAClB9Y,UAAQ,QAAQ;UACd,MAAM+Y,EAAM;UACZ,OAAO9Y,KAAS8Y,EAAM;UACtB,QAAQ7Y,KAAU6Y,EAAM;QAAA,GAE1B/Y,EAAQ,OAAO8Y,EAAI,MACnB9Y,EAAQ,SAAS8Y,EAAI,QACrB9Y,EAAQ,aAAa8Y,EAAI,YACzB9Y,EAAQ,cAAc;AAEtB,YAAI;AACF/R,eAAA,QAAAA,EAAS+R,CAAAA;QACX,SAASxR,IAAO;AACVL,eAAW,OACbA,EAAQK,EAAK,IAEb,QAAQ,MAAMA,EAAK,GAErB,KAAK,QAAQ,UAAUR,CAAG;QAC5B;MACF;MACAE;MACAC;IAAA,GAGK6R;EACT;AACF;ACvDA,IAAM1N,KAAU;AAAhB,IAEM4mB,KAAAA,IAAgCrpB,QAAA;AAFtC,IAGMspB,KAAAA,IAAiCtpB,QAAA;AAHvC,IAIMupB,KAAAA,IAA8BvpB,QAAA;AAJpC,IAKMwpB,KAAAA,IAAmCxpB,QAAA;AALzC,IAMMypB,KAAAA,IAAmCzpB,QAAA;AANzC,IAOM0pB,KAAAA,IAAmC1pB,QAAA;AAPzC,IAQM2pB,KAAAA,IAAkCC,QAAA;AARxC,IASMC,KAAAA,IAAsCC,WAAA;AAT5C,IAUMC,KAAAA,IAA+BC,IAAA;AAE9B,IAAMC,KAAN,MAAMA,IAAY;EAcvB,YAAYC,IAAW,GAAGC,IAAU,GAAGC,IAAQ,GAAGC,IAAO,GAAG;AAC1D,SAAK,WAAWH,GAChB,KAAK,UAAUC,GACf,KAAK,QAAQC,GACb,KAAK,OAAOC;EACd;EAEA,IAAI,WAAmB;AACrB,WAAO,KAAK;EACd;EAEA,IAAI,SAASxrB,GAAe;AAC1B,SAAK,YAAY,KAAK,IAAIA,GAAO4D,EAAO;EAC1C;EAEA,IAAI,QAAgB;AAClB,WAAO,KAAK;EACd;EAEA,IAAI,MAAM5D,GAAe;AACvB,SAAK,SAAS0R,GAAM1R,GAAO,CAAC,KAAK,KAAK,IAAI4D,IAAS,KAAK,KAAK,IAAIA,EAAO;EAC1E;EAEA,IAAIynB,GAAkBC,GAAiBC,GAAeC,GAAqB;AACzE,WAAA,KAAK,WAAWH,GAChB,KAAK,UAAUC,GACf,KAAK,QAAQC,GACTC,KAAQ,SACV,KAAK,OAAOA,IAEP;EACT;EAEA,QAAqB;AACnB,WAAO,IAAIJ,IAAY,KAAK,UAAU,KAAK,SAAS,KAAK,OAAO,KAAK,IAAI;EAC3E;EAEA,KAAKK,GAA0B;AAC7B,WAAA,KAAK,WAAWA,EAAM,UACtB,KAAK,UAAUA,EAAM,SACrB,KAAK,QAAQA,EAAM,OACnB,KAAK,OAAOA,EAAM,MACX;EACT;EAEA,OAAOA,GAA6B;AAClC,WACEA,EAAM,aAAa,KAAK,YACxBA,EAAM,YAAY,KAAK,WACvBA,EAAM,UAAU,KAAK,SACrBA,EAAM,SAAS,KAAK;EAExB;EAEA,UACE7oB,GACA8oB,GACAC,GACAC,GACAC,IAAYC,EAAU,OAChB;AACND,MAAU;MACRjpB;MACA4nB;MACAC;MACAC;IAAA,GAEFkB,KAAA,QAAAA,EAAI,KAAKlB,EAAAA;AAIT,UAAMtB,IAASuB,GACZ,KAAKH,EAAW,EAChB,eAAe,KAAK,IAAI,KAAK,OAAO,CAAC,EACrC;MACCI,GAAe,KAAKH,EAAY,EAAE,eAAe,KAAK,IAAI,KAAK,OAAO,CAAC;IAAA,EAExE,eAAe,KAAK,IAAI,KAAK,KAAK,CAAC,EACnC,IAAIG,GAAe,KAAKF,EAAS,EAAE,eAAe,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC,EACvE,UAAA,EACA,eAAe,KAAK,QAAQ;AAG/B,QAFAgB,EAAI,KAAK9oB,CAAM,EAAE,IAAIwmB,CAAM,GAEvB,KAAK,SAAS,GAAG;AACnB,YAAM2C,IAAWpB,GAAe,KAAK/nB,CAAM,EAAE,IAAI8oB,CAAG,EAAE,UAAA;AACtDhB,SAAU;QACRM,GAAkB,iBAAiBe,GAAU,KAAK,IAAI;MAAA;IAE1D;AACAJ,MAAW;MACTb,GAAc,OAAOY,GAAK9oB,GAAQ8nB,EAAS;IAAA;EAE/C;EAEA,cAAcsB,GAAgBH,IAAYC,EAAU,OAAyB;AAC3E,UAAMJ,IAAMf,GAAe,sBAAsBqB,EAAO,WAAW,GAC7DC,IAAYrB,GACf,IAAI,GAAG,GAAG,GAAG,EACb,UAAUoB,CAAM,EAChB,IAAIN,CAAG,EACP,UAAA,GACG9oB,IAASipB,EAAU,gBAAgBX,GAAW,IAAIQ,GAAKO,CAAS,CAAC;AACvE,QAAIrpB,KAAU;AACZ;AAGF,SAAK,WAAW8oB,EAAI,WAAW9oB,CAAM,GACrCipB,EAAU;MACRjpB;MACA4nB;MACAC;MACAC;IAAA,GAEF,KAAK,UAAU,KAAK;MAClBD,GAAa,IAAIwB,CAAS;MAC1BzB,GAAY,IAAIyB,CAAS;IAAA,GAE3B,KAAK,QAAQ,KAAK,KAAKvB,GAAU,IAAIuB,CAAS,CAAC;AAG/C,UAAML,IAAKjB,GAAe,KAAKqB,EAAO,EAAE,EAAE,gBAAgBA,EAAO,UAAU,GACrEvV,IAAIoU,GACP,KAAKoB,CAAS,EACd,eAAe,CAACL,EAAG,IAAIK,CAAS,CAAC,EACjC,IAAIL,CAAE,EACN,UAAA,GACGtT,IAAIqS,GACP,KAAKsB,CAAS,EACd,eAAe,CAACvB,GAAU,IAAIuB,CAAS,CAAC,EACxC,IAAIvB,EAAS,EACb,UAAA,GACGte,IAAIkM,EAAE,IAAI7B,CAAC,GACXpK,IAAI4f,EAAU,IAAI3T,EAAE,MAAM7B,CAAC,CAAC;AAClC,WAAA,KAAK,OAAO,KAAK,MAAMpK,GAAGD,CAAC,GAEpB;EACT;AACF;AC7JO,IAAM8f,KAAN,MAAMA,IAAU;EAQrB,YACSC,IAAO,GACPC,IAAQ,GACRC,IAAO,GACPC,IAAQ,GACf;AAJO,SAAA,OAAAH,GACA,KAAA,QAAAC,GACA,KAAA,OAAAC,GACA,KAAA,QAAAC;EACN;EAEH,IAAI,QAAgB;AAClB,QAAID,IAAO,KAAK;AAChB,WAAIA,IAAO,KAAK,SACdA,KAAQ,KAAK,KAAK,IAEbA,IAAO,KAAK;EACrB;EAEA,IAAI,SAAiB;AACnB,WAAO,KAAK,QAAQ,KAAK;EAC3B;EAEA,IAAIF,GAAcC,GAAeC,GAAcC,GAAqB;AAClE,WAAA,KAAK,OAAOH,GACZ,KAAK,QAAQC,GACb,KAAK,OAAOC,GACZ,KAAK,QAAQC,GACN;EACT;EAEA,QAAmB;AACjB,WAAO,IAAIJ,IAAU,KAAK,MAAM,KAAK,OAAO,KAAK,MAAM,KAAK,KAAK;EACnE;EAEA,KAAKT,GAA4B;AAC/B,WAAA,KAAK,OAAOA,EAAM,MAClB,KAAK,QAAQA,EAAM,OACnB,KAAK,OAAOA,EAAM,MAClB,KAAK,QAAQA,EAAM,OACZ;EACT;EAEA,OAAOA,GAA+B;AACpC,WACEA,EAAM,SAAS,KAAK,QACpBA,EAAM,UAAU,KAAK,SACrBA,EAAM,SAAS,KAAK,QACpBA,EAAM,UAAU,KAAK;EAEzB;EAEA,GAAGrf,GAAWC,GAAWzL,IAAS,IAAI2rB,EAAAA,GAAsB;AAC1D,WAAO3rB,EAAO;MACZ,KAAK,QAAQ,KAAK,OAAO,KAAK,QAAQwL;MACtC,KAAK,SAAS,KAAK,QAAQ,KAAK,SAASC;IAAA;EAE7C;EAEA,UAAU1D,GAA0BygB,IAAS,GAAS;AACpD,WAAA,KAAK,OAAOzgB,EAAMygB,CAAM,GACxB,KAAK,QAAQzgB,EAAMygB,IAAS,CAAC,GAC7B,KAAK,OAAOzgB,EAAMygB,IAAS,CAAC,GAC5B,KAAK,QAAQzgB,EAAMygB,IAAS,CAAC,GACtB;EACT;EAEA,QAAQzgB,IAAkB,CAAA,GAAIygB,IAAS,GAAa;AAClD,WAAAzgB,EAAMygB,CAAM,IAAI,KAAK,MACrBzgB,EAAMygB,IAAS,CAAC,IAAI,KAAK,OACzBzgB,EAAMygB,IAAS,CAAC,IAAI,KAAK,MACzBzgB,EAAMygB,IAAS,CAAC,IAAI,KAAK,OAClBzgB;EACT;EAEA,EAAE,OAAO,QAAQ,IAAuB;AACtC,UAAM,KAAK,MACX,MAAM,KAAK,OACX,MAAM,KAAK,MACX,MAAM,KAAK;EACb;AACF;AApFEujB,GAAgB,MAAoB,IAAIA;EACtCK,EAAS;EACTA,EAAS;EACTA,EAAS;EACTA,EAAS;AAAA;AALN,IAAMC,KAANN;ACXP,IAAMO,KAAiB;AAMhB,SAASC,GAAgB1Y,GAAgB2Y,GAA4B;AAC1E,SAAO3Y,EAAO,QAAQyY,IAAgB,CAACG,GAAOC,MAAiB;AAE7D,UAAMC,IADaD,EAAK,MAAM,GAAG,EACN;MACzB,CAACE,GAAQC,MACP,OAAOD,KAAW,YAAYA,KAAU,OACpCA,EAAOC,CAAS,IAChB;MACNL;IAAA;AAEF,QAAI,OAAOG,KAAY;AACrB,YAAM,IAAI,MAAM,8BAA8BD,CAAI,GAAG;AAEvD,WAAOH,GAAgBI,GAASH,CAAQ;EAC1C,CAAC;AACH;ACjBA,IAAIM;AAEJ,SAASC,KAA8B;AACrC,MAAID,MAAoB;AACtB,WAAOA;AAET,QAAMna,IAAI,IAAI,YAAY,CAAC,SAAU,CAAC;AAEtC,SAAAma,KADU,IAAI,WAAWna,EAAE,QAAQA,EAAE,YAAYA,EAAE,UAAU,EACxC,CAAC,MAAM,GACrBma;AACT;AAiBA,SAASE,GACP1sB,GACAuF,GACAonB,GACAC,IAAe,MACH;AACZ,MAAIA,MAAiBH,GAAAA;AAGnB,WAAO,IAAIlnB,EAAWvF,CAAM;AAE9B,QAAMqN,IAAO,OAAO,OAAO,IAAI,SAASrN,CAAM,GAAG;IAC/C,WAA2ByP,GAAoBmd,GAAwB;AACrE,aAAOrd,GAAW,MAAME,GAAYmd,CAAY;IAClD;EAAA,CACD,GACK1kB,IAAQ,IAAI3C,EAAW8H,EAAK,aAAa9H,EAAW,iBAAiB;AAC3E,WACM5F,IAAQ,GAAGktB,IAAY,GAC3BltB,IAAQuI,EAAM,QACd,EAAEvI,GAAOktB,KAAatnB,EAAW;AAEjC2C,MAAMvI,CAAK,IAAI0N,EAAKsf,CAAQ,EAAEE,GAAWD,CAAY;AAEvD,SAAO1kB;AACT;AAOO,IAAMsR,KAAgD,CAAAxZ,MAC3D,IAAI,WAAWA,CAAM;AADhB,IAGM8sB,KAA8C,CAAA9sB,MACzD,IAAI,UAAUA,CAAM;AAJf,IAMM+sB,KAAkD,CAC7D/sB,GACA4sB,MACGF,GAAgB1sB,GAAQ,aAAa,aAAa4sB,CAAY;AAT5D,IAWMI,KAAgD,CAC3DhtB,GACA4sB,MACGF,GAAgB1sB,GAAQ,YAAY,YAAY4sB,CAAY;AAd1D,IAgBMK,KAAgD,CAC3DjtB,GACA4sB,MACGF,GAAgB1sB,GAAQ,YAAY,YAAY4sB,CAAY;AAnB1D,IAqBMM,KAAkD,CAC7DltB,GACA4sB,MACGF,GAAgB1sB,GAAQ,aAAa,aAAa4sB,CAAY;AAxB5D,IA0BMO,KAAoD,CAC/DntB,GACA4sB,MACGF,GAAgB1sB,GAAQ6M,GAAc,cAAc+f,CAAY;AA7B9D,IA+BMQ,KAAoD,CAC/DptB,GACA4sB,MACGF,GAAgB1sB,GAAQ,cAAc,cAAc4sB,CAAY;AAlC9D,IAoCMS,KAAoD,CAC/DrtB,GACA4sB,MACGF,GAAgB1sB,GAAQ,cAAc,cAAc4sB,CAAY;ACtF9D,IAAMU,KAAN,cAAyB9c,GAAiC;EAC/D,YAAYX,GAA0B;AACpC;MACE6Z;MACAlQ;MACA;QACE,QAAQgP;QACR,WAAW+E;QACX,WAAWA;QACX,OAAOC;QACP,OAAOA;QACP,OAAOA;QACP,OAAOxsB;QACP,QAAQC;QACR,OAAOC;MAAA;MAET2O;IAAA;EAEJ;AACF;AC3BA,UAAU4d,GACR9hB,GACAC,GACA+b,GACA+F,GACAvtB,GAC2B;AAC3B,MAAIwnB,KAAK+F;AACP;AAEF,QAAMC,IAAU,KAAKhG,GACfiG,IAAQjG,IAAI,GACZkG,IAAQ,KAAKD,GACbE,IAAQ,KAAK,MAAOniB,IAAIgiB,IAAWE,CAAK,GACxCE,IAAQ,KAAK,MAAOniB,IAAI+hB,IAAWE,CAAK,GACxCG,IAAW;IACf,CAACF,GAAOC,GAAOH,CAAK;IACpB,CAACE,IAAQ,GAAGC,GAAOH,CAAK;IACxB,CAACE,GAAOC,IAAQ,GAAGH,CAAK;IACxB,CAACE,IAAQ,GAAGC,IAAQ,GAAGH,CAAK;EAAA;AAE9B,MAAIA,IAAQF;AACV,eAAWO,MAASD;AAClB,iBAAWE,MAAST,GAAiB,GAAGQ,IAAOP,GAAMvtB,CAAM;AACzD,cAAM+tB;;AAIV,eAAWD,MAASD;AAClB,aAAO7tB,KAAU,IAAIguB,GAAA,GAAkB,IAAI,GAAGF,EAAK;AAGzD;AAEO,IAAME,KAAN,MAAMA,IAAe;EAC1B,YACSxiB,IAAI,GACJC,IAAI,GACJ+b,IAAI,GACX;AAHO,SAAA,IAAAhc,GACA,KAAA,IAAAC,GACA,KAAA,IAAA+b;EACN;EAEH,IAAIhc,GAAWC,GAAW+b,GAAkB;AAC1C,WAAA,KAAK,IAAIhc,GACT,KAAK,IAAIC,GACL+b,KAAK,SACP,KAAK,IAAIA,IAEJ;EACT;EAEA,QAAwB;AACtB,WAAO,IAAIwG,IAAe,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;EAClD;EAEA,KAAKnD,GAAiC;AACpC,WAAA,KAAK,IAAIA,EAAM,GACf,KAAK,IAAIA,EAAM,GACf,KAAK,IAAIA,EAAM,GACR;EACT;EAEA,OAAOA,GAAoC;AACzC,WAAOA,EAAM,MAAM,KAAK,KAAKA,EAAM,MAAM,KAAK,KAAKA,EAAM,MAAM,KAAK;EACtE;EAEA,UAAU7qB,IAAS,IAAIguB,IAAAA,GAAkC;AACvD,UAAMR,IAAU,KAAK,KAAK,GACpBhiB,IAAI,KAAK,IAAIgiB,GACb/hB,IAAI,KAAK,IAAI+hB,GACbhG,IAAI,KAAK,IAAI,GACbkG,IAAQ,KAAKlG;AACnB,WAAOxnB,EAAO,IAAI,KAAK,MAAMwL,IAAIkiB,CAAK,GAAG,KAAK,MAAMjiB,IAAIiiB,CAAK,GAAGlG,CAAC;EACnE;EAEA,CAAC,iBACC3W,GACA7Q,GAC2B;AAC3B,UAAM,EAAE,GAAAwL,GAAG,GAAAC,GAAG,GAAA+b,EAAA,IAAM;AACpB,eAAWuG,KAAST,GAAiB9hB,GAAGC,GAAG+b,GAAGA,IAAI3W,GAAO7Q,CAAM;AAC7D,YAAM+tB;EAEV;EAEA,UAAUhmB,GAA0BygB,IAAS,GAAS;AACpD,WAAA,KAAK,IAAIzgB,EAAMygB,CAAM,GACrB,KAAK,IAAIzgB,EAAMygB,IAAS,CAAC,GACzB,KAAK,IAAIzgB,EAAMygB,IAAS,CAAC,GAClB;EACT;EAEA,QAAQzgB,IAAkB,CAAA,GAAIygB,IAAS,GAAa;AAClD,WAAAzgB,EAAMygB,CAAM,IAAI,KAAK,GACrBzgB,EAAMygB,IAAS,CAAC,IAAI,KAAK,GACzBzgB,EAAMygB,IAAS,CAAC,IAAI,KAAK,GAClBzgB;EACT;EAEA,EAAE,OAAO,QAAQ,IAAuB;AACtC,UAAM,KAAK,GACX,MAAM,KAAK,GACX,MAAM,KAAK;EACb;AACF;ACzGA,IAAMkmB,KAAAA,IAAkCC,QAAA;AASjC,IAAMC,KAAN,MAAMA,IAAa;EACxB,YACSxd,IAAQ,GACRC,IAAS,GACTwd,IAAYxC,GAAU,KAC7B;AAHO,SAAA,QAAAjb,GACA,KAAA,SAAAC,GACA,KAAA,YAAAwd;EACN;EAEH,QAAsB;AACpB,WAAO,IAAID,IAAa,KAAK,OAAO,KAAK,QAAQ,KAAK,UAAU,MAAA,CAAO;EACzE;EAEA,KAAKtD,GAA+B;AAClC,WAAA,KAAK,QAAQA,EAAM,OACnB,KAAK,SAASA,EAAM,QACpB,KAAK,UAAU,KAAKA,EAAM,SAAS,GAC5B;EACT;EAEA,QAAQrD,GAAWxnB,IAAS,IAAIkuB,QAAAA,GAAoB;AAClD,WAAOluB,EAAO,IAAI,KAAK,SAASwnB,GAAG,KAAK,UAAUA,CAAC;EACrD;;EAGA,QACE6G,GACA7G,GACAxnB,IAAS,IAAIguB,GAAAA,GACG;AAChB,UAAMrP,IAAO,KAAK,QAAQ6I,GAAGyG,EAAa,GACpC,EAAE,WAAAG,EAAAA,IAAc,MAChBzd,IAAQyd,EAAU,QAAQzP,EAAK,GAC/B/N,IAASwd,EAAU,SAASzP,EAAK,GACjC,EAAE,MAAA4M,GAAM,OAAAC,GAAO,MAAAC,EAAA,IAAS2C;AAC9B,QAAIE,KAAYD,EAAS;AACrB5C,QAAOF,MACT+C,MAAa,KAAK,KAAK;AAEzB,QAAI9iB,KAAI,KAAK,OAAO8iB,KAAY/C,KAAQ5a,CAAK;AACzCnF,IAAAA,MAAKmT,EAAK,MACZnT,KAAImT,EAAK,IAAI;AAEf,QAAIlT,KAAI,KAAK,OAAO4iB,EAAS,WAAW7C,KAAS5a,CAAM;AACvD,WAAInF,MAAKkT,EAAK,MACZlT,KAAIkT,EAAK,IAAI,IAEf3e,EAAO,IAAIwL,IACXxL,EAAO,IAAIyL,IACXzL,EAAO,IAAIwnB,GACJxnB;EACT;;EAGA,aAAauuB,GAA0BvuB,IAAS,IAAI4rB,GAAAA,GAAwB;AAC1E,UAAMjN,IAAO,KAAK,QAAQ4P,EAAK,GAAGN,EAAa,GACzC,EAAE,WAAAG,EAAAA,IAAc,MAChBzd,IAAQyd,EAAU,QAAQzP,EAAK,GAC/B/N,IAASwd,EAAU,SAASzP,EAAK,GACjC,EAAE,MAAA4M,GAAM,OAAAG,EAAA,IAAU0C;AACxB,WAAApuB,EAAO,OAAOuuB,EAAK,IAAI5d,IAAQ4a,GAC/BvrB,EAAO,QAAQuuB,EAAK,IAAI,KAAK5d,IAAQ4a,GACrCvrB,EAAO,QAAQ0rB,KAAS/M,EAAK,IAAI4P,EAAK,IAAI,KAAK3d,GAC/C5Q,EAAO,QAAQ0rB,KAAS/M,EAAK,IAAI4P,EAAK,KAAK3d,GACpC5Q;EACT;AACF;AC7EA,IAAMwuB,KACJ;AAEF,SAASC,GACPzC,GACA/d,GACAO,GACAkgB,GACQ;AACR,MAAIC,IAAS;AACb,WAASrkB,IAAI,SAAS2D,CAAK,GAAG3D,IAAI,SAASkE,CAAG,GAAG,EAAElE;AACjDqkB,SAAUD,EACP,QAAQ,gBAAgB,MAAMpkB,IAAI,GAAG,EACrC,QAAQ,wBAAwB,GAAGA,CAAC,EAAE;AAE3C,SAAOqkB;AACT;AAEO,SAASC,GAAYD,GAAwB;AAClD,SAAOA,EAAO,QAAQH,IAAmBC,EAAY;AACvD;",
  "names": ["isProduction", "prefix", "invariant", "condition", "message", "value", "vectorScratch", "Vector3", "projectOnEllipsoidSurface", "position", "reciprocalRadiiSquared", "result", "options", "x", "y", "z", "rx", "ry", "rz", "x2", "y2", "z2", "normSquared", "ratio", "intersection", "gradient", "lambda", "correction", "sx", "sy", "sz", "error", "sx2", "sy2", "sz2", "sx3", "sy3", "sz3", "vectorScratch1", "vectorScratch2", "vectorScratch3", "_Ellipsoid", "east", "north", "up", "Matrix4", "ray", "reciprocalRadii", "p", "d", "p2", "d2", "pd", "discriminant", "Q", "t1", "t2", "t", "surfacePosition", "radius", "a2", "b2", "normal", "direction", "v", "q", "Ellipsoid", "EllipsoidGeometry", "BufferGeometry", "radii", "longitudeSegments", "latitudeSegments", "elementCount", "vertex", "vertices", "normals", "uvs", "grid", "indices", "vertexIndex", "uvIndex", "rowIndex", "rowIndices", "phi", "uOffset", "u", "theta", "a", "b", "c", "BufferAttribute", "source", "_Geodetic", "longitude", "latitude", "height", "other", "projection", "ellipsoid", "radiiSquared", "cosLatitude", "array", "offset", "Geodetic", "ArrayBufferLoader", "Loader", "url", "onLoad", "onProgress", "onError", "loader", "FileLoader", "arrayBuffer", "invariant", "error", "assertType", "value", "toBufferGeometryLike", "geometry", "attributes", "index", "boundingBox", "boundingSphere", "attribute", "_a", "buffer", "fromBufferGeometryLike", "input", "result", "BufferGeometry", "name", "BufferAttribute", "min", "max", "Box3", "Vector3", "center", "radius", "Sphere", "isFloatLinearSupported", "renderer", "STBN_TEXTURE_WIDTH", "STBN_TEXTURE_HEIGHT", "STBN_TEXTURE_DEPTH", "ref", "DEFAULT_STBN_URL", "THIS_IS_NOT_AN_OBJECT", "THIS_IS_NOT_A_FLOAT16ARRAY_OBJECT", "THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY", "THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT", "SPECIES_CONSTRUCTOR_DIDNT_RETURN_TYPEDARRAY_OBJECT", "DERIVED_CONSTRUCTOR_CREATED_TYPEDARRAY_OBJECT_WHICH_WAS_TOO_SMALL_LENGTH", "ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER", "CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT", "CANNOT_MIX_BIGINT_AND_OTHER_TYPES", "ITERATOR_PROPERTY_IS_NOT_CALLABLE", "REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE", "THE_COMPARISON_FUNCTION_MUST_BE_EITHER_A_FUNCTION_OR_UNDEFINED", "OFFSET_IS_OUT_OF_BOUNDS", "uncurryThis", "target", "thisArg", "args", "ReflectApply", "uncurryThisGetter", "key", "ReflectGetOwnPropertyDescriptor", "ReflectConstruct", "ReflectDefineProperty", "ReflectGet", "ReflectGetPrototypeOf", "ReflectHas", "ReflectOwnKeys", "ReflectSet", "ReflectSetPrototypeOf", "NativeProxy", "EPSILON", "MAX_SAFE_INTEGER", "NumberIsFinite", "NumberIsNaN", "SymbolIterator", "SymbolSpecies", "SymbolToStringTag", "SymbolFor", "NativeObject", "ObjectCreate", "ObjectDefineProperty", "ObjectFreeze", "ObjectIs", "ObjectPrototype", "ObjectPrototype__lookupGetter__", "object", "NativeTypeError", "descriptor", "ObjectHasOwn", "NativeArray", "ArrayIsArray", "ArrayPrototype", "ArrayPrototypeJoin", "ArrayPrototypePush", "ArrayPrototypeToLocaleString", "NativeArrayPrototypeSymbolIterator", "ArrayPrototypeSymbolIterator", "MathAbs", "MathTrunc", "NativeArrayBuffer", "ArrayBufferIsView", "ArrayBufferPrototype", "ArrayBufferPrototypeSlice", "ArrayBufferPrototypeGetByteLength", "NativeSharedArrayBuffer", "SharedArrayBufferPrototypeGetByteLength", "TypedArray", "TypedArrayFrom", "TypedArrayPrototype", "NativeTypedArrayPrototypeSymbolIterator", "TypedArrayPrototypeKeys", "TypedArrayPrototypeValues", "TypedArrayPrototypeEntries", "TypedArrayPrototypeSet", "TypedArrayPrototypeReverse", "TypedArrayPrototypeFill", "TypedArrayPrototypeCopyWithin", "TypedArrayPrototypeSort", "TypedArrayPrototypeSlice", "TypedArrayPrototypeSubarray", "TypedArrayPrototypeGetBuffer", "TypedArrayPrototypeGetByteOffset", "TypedArrayPrototypeGetLength", "TypedArrayPrototypeGetSymbolToStringTag", "NativeUint8Array", "NativeUint16Array", "Uint16ArrayFrom", "NativeUint32Array", "NativeFloat32Array", "ArrayIteratorPrototype", "ArrayIteratorPrototypeNext", "GeneratorPrototypeNext", "IteratorPrototype", "DataViewPrototype", "DataViewPrototypeGetUint16", "NativeRangeError", "NativeWeakSet", "WeakSetPrototype", "WeakSetPrototypeAdd", "WeakSetPrototypeHas", "NativeWeakMap", "WeakMapPrototype", "WeakMapPrototypeGet", "WeakMapPrototypeHas", "WeakMapPrototypeSet", "arrayIterators", "SafeIteratorPrototype", "arrayIterator", "safeIfNeeded", "array", "safe", "generators", "DummyArrayIteratorPrototype", "generator", "wrap", "dummy", "isObject", "isObjectLike", "isNativeTypedArray", "isNativeBigIntTypedArray", "typedArrayName", "isArrayBuffer", "isSharedArrayBuffer", "isAnyArrayBuffer", "isOrdinaryArray", "isOrdinaryNativeTypedArray", "isCanonicalIntegerIndexString", "number", "brand", "hasFloat16ArrayBrand", "prototype", "constructor", "INVERSE_OF_EPSILON", "roundTiesToEven", "num", "FLOAT16_MIN_VALUE", "FLOAT16_MAX_VALUE", "FLOAT16_EPSILON", "FLOAT16_EPSILON_MULTIPLIED_BY_FLOAT16_MIN_VALUE", "FLOAT16_EPSILON_DEVIDED_BY_EPSILON", "roundToFloat16", "sign", "absolute", "temp", "floatView", "uint32View", "baseTable", "shiftTable", "i", "roundToFloat16Bits", "f", "e", "mantissaTable", "m", "exponentTable", "offsetTable", "convertToNumber", "float16bits", "ToIntegerOrInfinity", "ToLength", "length", "SpeciesConstructor", "defaultConstructor", "species", "IsDetachedBuffer", "defaultCompare", "x", "y", "isXNaN", "isYNaN", "isXPlusZero", "isYPlusZero", "BYTES_PER_ELEMENT", "float16bitsArrays", "isFloat16Array", "assertFloat16Array", "assertSpeciesTypedArray", "count", "isTargetFloat16Array", "isTargetTypedArray", "float16bitsArray", "getFloat16BitsArray", "float16", "cloned", "Float16Array", "copyToArray", "TypedArrayPrototypeGetters", "handler", "receiver", "_byteOffset", "_length", "list", "data", "iterator", "proxy", "src", "opts", "Constructor", "uint16", "mapFunc", "val", "items", "relativeIndex", "k", "callback", "kept", "accumulator", "start", "targetOffset", "targetLength", "srcLength", "clonedFloat16bitsArray", "compareFn", "sortCompare", "end", "relativeStart", "relativeEnd", "final", "n", "begin", "uint16Subarray", "element", "from", "isNaN", "separator", "Float16ArrayPrototype", "getFloat16", "dataView", "byteOffset", "isTypedArray", "TypedArrayLoader", "parser", "manager", "getTextureDataType", "type", "ByteType", "UnsignedByteType", "ShortType", "UnsignedShortType", "IntType", "UnsignedIntType", "HalfFloatType", "FloatType", "DataTextureLoader", "textureClass", "options", "RGBAFormat", "LinearFilter", "texture", "width", "height", "depth", "clamp", "MathUtils", "euclideanModulo", "inverseLerp", "lerp", "radians", "degrees", "isPowerOfTwo", "ceilPowerOfTwo", "floorPowerOfTwo", "normalize", "remap", "min1", "max1", "min2", "max2", "remapClamped", "smoothstep", "saturate", "closeTo", "a", "b", "relativeEpsilon", "absoluteEpsilon", "diff", "define", "propertyKey", "Material", "defineInt", "prevValue", "defineFloat", "precision", "defineExpression", "validate", "definePropertyShorthand", "destination", "sourceKeysArgs", "descriptors", "source", "keys", "defineUniformShorthand", "version", "REVISION", "u8", "u16", "u32", "fleb", "fdeb", "clim", "freb", "eb", "r", "j", "fl", "revfl", "_b", "fd", "rev", "hMap", "cd", "mb", "l", "le", "co", "rvb", "sv", "r_1", "v", "flt", "fdt", "flrm", "fdrm", "bits", "d", "p", "o", "bits16", "shft", "slc", "s", "inflt", "dat", "buf", "st", "sl", "noBuf", "noSt", "cbuf", "bl", "nbuf", "pos", "bt", "lm", "dm", "lbt", "dbt", "tbts", "hLit", "hcLen", "tl", "ldt", "clt", "clb", "clbmsk", "clm", "c", "lt", "dt", "t", "lms", "dms", "lpos", "sym", "add", "dsym", "et", "zlv", "unzlibSync", "out", "td", "tds", "hasColorSpace", "EXRLoader", "logBase", "reverseLutFromBitmap", "bitmap", "lut", "hufClearDecTable", "hdec", "getBitsReturn", "getBits", "nBits", "lc", "uInt8Array2", "inOffset", "parseUint8Array", "hufTableBuffer", "hufCanonicalCodeTable", "hcode", "nc", "hufUnpackEncTable", "inDataView", "ni", "im", "iM", "zerun", "hufLength", "code", "hufCode", "hufBuildDecTable", "hdecod", "pl", "plOffset", "getCharReturn", "getChar", "getCodeReturn", "getCode", "po", "rlc", "outBuffer", "outBufferOffset", "outBufferEndOffset", "cs", "UInt16", "Int16", "wdec14Return", "wdec14", "h", "ls", "hs", "hi", "ai", "as", "bs", "wdec16", "bb", "aa", "wav2Decode", "buffer2", "nx", "ox", "ny", "oy", "mx", "w14", "p2", "py", "ey", "oy1", "oy2", "ox1", "ox2", "i00", "i01", "i10", "i11", "px", "ex", "p01", "p10", "p11", "hufDecode", "encodingTable", "decodingTable", "no", "outOffset", "inOffsetEnd", "hufUncompress", "nCompressed", "nRaw", "initialInOffset", "parseUint32", "freq", "applyLut", "nData", "predictor", "interleaveScalar", "t1", "t2", "stop", "decodeRunLength", "size", "reader", "lossyDctDecode", "cscSet", "rowPtrs", "channelData", "acBuffer", "dcBuffer", "numComp", "numFullBlocksX", "numBlocksX", "numBlocksY", "leftoverX", "leftoverY", "currAcComp", "currDcComp", "dctData", "halfZigBlock", "rowBlock", "rowOffsets", "comp2", "blocky", "maxY", "maxX", "blockx", "unRleAC", "unZigZag", "dctInverse", "csc709Inverse", "convertToHalf", "offset2", "type2", "y2", "offset3", "x2", "halfRow", "comp", "decodeFloat16", "acValue", "dctComp", "dst", "g", "alpha", "beta", "theta", "gamma", "row", "rowPtr", "column", "cb", "cr", "idx", "DataUtils", "toLinear", "float", "uncompressRAW", "info", "uncompressRLE", "compressed", "rawBuffer", "tmpBuffer", "uncompressZIP", "uncompressPIZ", "outBufferEnd", "pizChannelData", "minNonZero", "parseUint16", "maxNonZero", "parseUint8", "maxValue", "tmpOffset2", "cp", "uncompressPXR", "sz", "tmpBufferEnd", "writePtr", "ptr", "pixel", "uncompressDWA", "dwaHeader", "parseInt64", "EXRHeader", "channelRules", "ruleSize", "parseNullTerminatedString", "compression", "csc", "channels", "channel", "rule", "zlibInfo", "rleBuffer", "chan", "rleOffset", "rowOffsetBytes", "byte", "uintBuffer", "endOffset", "stringValue", "parseFixedLengthString", "parseRational", "parseInt32", "parseTimecode", "Int32", "Uint32", "Uint8", "int", "parseFloat32", "decodeFloat32", "binary", "exponent", "fraction", "Uint16", "parseFloat16", "parseChlist", "startOffset", "pixelType", "pLinear", "xSampling", "ySampling", "parseChromaticities", "redX", "redY", "greenX", "greenY", "blueX", "blueY", "whiteX", "whiteY", "parseCompression", "compressionCodes", "parseBox2i", "xMin", "yMin", "xMax", "yMax", "parseLineOrder", "lineOrders", "lineOrder", "parseV2f", "parseV3f", "z", "parseValue", "parseHeader", "EXRHeader2", "spec", "keepReading", "attributeName", "attributeType", "attributeSize", "attributeValue", "setupDecoder", "outputType", "EXRDecoder2", "RedFormat", "bufferDataView", "uInt8Array", "offset", "EXRDecoder", "tmpOffset", "channelOffsets", "scanlineBlockIdx", "line", "viewer", "line_y", "true_y", "channelID", "cOff", "outIndex", "onLoadCallback", "texData", "EXR3DTextureLoader", "Data3DTexture", "exr", "image", "EXRTextureLoader", "DataTexture", "eastScratch", "northScratch", "upScratch", "vectorScratch1", "vectorScratch2", "vectorScratch3", "matrixScratch", "Matrix4", "quaternionScratch", "Quaternion", "rayScratch", "Ray", "PointOfView", "distance", "heading", "pitch", "roll", "other", "eye", "quaternion", "up", "ellipsoid", "Ellipsoid", "rollAxis", "camera", "direction", "_Rectangle", "west", "south", "east", "north", "Geodetic", "Rectangle", "includePattern", "resolveIncludes", "includes", "match", "path", "include", "parent", "component", "hostLittleEndian", "isHostLittleEndian", "parseTypedArray", "getValue", "littleEndian", "byteIndex", "parseInt8Array", "parseUint16Array", "parseInt16Array", "parseInt32Array", "parseUint32Array", "parseFloat16Array", "parseFloat32Array", "parseFloat64Array", "STBNLoader", "NearestFilter", "RepeatWrapping", "traverseChildren", "maxZ", "divisor", "nextZ", "scale", "nextX", "nextY", "children", "child", "coord", "TileCoordinate", "vectorScratch", "Vector2", "TilingScheme", "rectangle", "geodetic", "longitude", "tile", "unrollLoopPattern", "loopReplacer", "snippet", "string", "unrollLoops"]
}
